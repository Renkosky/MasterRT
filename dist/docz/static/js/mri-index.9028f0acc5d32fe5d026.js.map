{"version":3,"sources":["webpack:///./mri/index.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","src","alt","className"],"mappings":"25CAKqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,QAAvD,OACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,IAAInB,MAAO,CAACoB,KAAO,uCAAuCP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,EAAYQ,WAAW,IAAInB,MAAO,CAACqB,IAAM,uDAAuDC,IAAM,mBAC5RT,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,sDACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,0EACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,yCAAvD,yCACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,kGACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,uJACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,uBAAvD,sBACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,gGACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,iFACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,sEACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,8KACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,mCAAvD,kCACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,0LACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,iBAAvD,gBACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,IAApE,m5HAqG3Ca,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,aAAvD,YACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,GAC9BE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,gBAAiEN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,KAAKnB,MAAO,CAACoB,KAAO,iCAAxE,OAAjE,sHACAP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,6DACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,2CACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,oCACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,sGAEAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,kBAAvD,iBACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACuB,UAAY,kBAAjF","file":"static/js/mri-index.15ed2c34.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"mri\"}}>{`MRI`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://npmjs.org/package/masterrt\"}}><MDXTag name=\"img\" components={components} parentName=\"a\" props={{\"src\":\"https://img.shields.io/npm/v/masterrt.svg?style=flat\",\"alt\":\"NPM version\"}}></MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`SIA DASHBOARD 前端开发环境`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`多项目, 组装式, 约定式架构`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"多项目主题）\"}}>{`多项目(主题）`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在MRI架构下，多项目(theme)是一种常态；`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`每个项目(主题) 通过不同的配置，可以单独开发，部署等`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"组装式\"}}>{`组装式`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在MRI下，基本单位是Component, 又称组件；`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`与React的组件即路由高度重合；`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`一个组件就是一个路由；`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`通过 theme.routes 配置将 component 和 theme 桥接起来，构成一个项目的主体部分；`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"约定性架构\"}}>{`约定性架构`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`通过一定的约定, 可以提高开发效率，降低系统的复杂度以及出错率；`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"目录\"}}>{`目录`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{` + mri/\n    // mock\n    + mock/\n        // mock api setting\n        - user.js\n        ...\n\n    // webpack public\n    // 存放一些静态资源和国际化文件\n    + public\n        ...\n\n    // dva model\n    + model/\n        ...\n\n    // 源文件\n    + src/\n        // component 存放文件路径\n        // 可使用cli命令生成 mri component componentName\n        + components/\n            // 某个component\n            + abc-def/\n                // component 主文件\n                - abc-def.tsx\n                // component 样式文件\n                - abc-def.less\n                // index.ts 索引文件\n                - index.ts\n        // widget小部件\n        // component的组成部分\n        // 可使用cli命令生成 mri component widgetName --widget\n        + widgets/\n            // 某个 widget\n            + abc-def\n                // widget 主文件\n                - abc-lgh.tsx\n                // widget 样式文件\n                - abc-lgh.less\n                // index.ts 索引文件\n                - index.ts\n        // 相对公共资源文件\n        + common/\n            // service 服务\n            + services/\n                // index 索引文件，便于调用(MRI-CLI自动生成)\n                // 可使用cli命令生成 mri index\n                - index.ts\n                - \\${theme1}.service.ts\n                - \\${theme2}.service.ts\n                ...\n            // 常量文件\n            + const/\n                // index 索引文件，便于调用(MRI-CLI自动生成)\n                // 可使用cli命令生成 mri index\n                - index.ts\n                // 对应的cosnt interface(MRI-CLI自动生成）\n                // 可使用cli命令生成 mri interface\n                + interface-mri/\n                    -  \\${theme1}.const.d.ts\n                    -  \\${theme1}.const.d.ts\n                    ...\n                - \\${theme1}.const.ts\n                - \\${theme2}.const.ts\n                ...\n            // 布局文件\n            + layouts\n                // 一个叫做a风格的布局模式\n                // 可使用cli命令生成 mri component layoutName --layout\n                + a-layout\n                    - a-layout.tsx\n                    - a-layout.less\n                    - index.ts\n\n      // 主题(项目)\n      + theme/\n        // 全局路由守卫\n        - route-guard.tsx\n        // theme 主控器\n        - theme.mri.ts\n\n        // 各theme主文件\n        // 可使用cli命令生成 mri theme themeName\n        + \\${theme}/\n            // 常见开发三种环境的配置文件\n            + env/\n                - \\${theme}-dev-cont.ts\n                - \\${theme}-test-cont.ts\n                - \\${theme}-prod-cont.ts\n\n            // umirc.js, mrirc.js 的配置信息\n            - \\${theme}-config.js\n            // dva 的启动文件\n            - \\${theme}-dva.ts\n            // 单theme的路由守卫，是全局路由守卫的补充\n            - \\${theme}-route-guard.ts\n            // \\${theme} 路由配置文件\n            - \\${theme}-routes.ts\n            // umijs 和 mri-cli 的相关配置信息\n            - \\${theme}-umi.js\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"features\"}}>{`Features`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`使用 `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/umijs/umi\"}}>{`umi`}</MDXTag>{`，作为MRI的基本框架；完美支持umi的各种特性`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`使用 mri-cli 辅助开发项目`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`默认使用 MasterRT, Antd`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`基于RESTFul (MrResource)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`推荐使用 TypeScript，不会对非ts做特殊优化`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"getting-start\"}}>{`Getting Start`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`// 安装 mri-cli\n\\$ yarn global add mri-cli\n\n// 新建环境\n\\$ mri init myapp\n\n// 启动主题\n\\$ mri dev mytheme\n\n// 构建测试环境的主题（配置环境变量，只供测试时使用）\n\\$ mri build mytheme\n\n// 构建生产环境的主题\n\\$ mri prod mytheme\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}