{"version":3,"sources":["webpack:///./src/lib/assets/js/china.js","webpack:///./src/lib/assets/js/theme.customed.js","webpack:///./src/lib/mr-echarts/mr-echarts.component.tsx","webpack:///./src/lib/mr-echarts/mr-echarts.services.ts","webpack:///./src/lib/mr-echarts/mr-echarts.setting.ts"],"names":["root","factory","this","exports","echarts","log","msg","console","error","registerMap","type","features","id","geometry","coordinates","encodeOffsets","properties","cp","name","childNum","UTF8Encoding","window","define","amd","_typeof","nodeName","require","colors","registerTheme","color","backgroundColor","textStyle","title","subtextStyle","line","itemStyle","normal","borderWidth","lineStyle","width","symbolSize","symbol","smooth","radar","bar","barBorderWidth","barBorderColor","emphasis","pie","borderColor","scatter","boxplot","parallel","sankey","funnel","gauge","candlestick","color0","borderColor0","graph","label","map","areaColor","geo","categoryAxis","axisLine","show","axisTick","axisLabel","splitLine","splitArea","areaStyle","valueAxis","logAxis","timeAxis","toolbox","iconStyle","legend","tooltip","axisPointer","crossStyle","timeline","controlStyle","checkpointStyle","visualMap","dataZoom","dataBackgroundColor","fillerColor","handleColor","handleSize","markPoint","base","names","POSITIVE","NEGATIVE","NEUTRAL","module","MrEcharts","_chartRef","_chart","_theme","_width","_height","drawCharts","_","props","rst","_this","getCharts","data","dataType","dataModel","chartTypes","options","result","setting","transform","mu","run","indexOf","clear","ifnvl","isEmpty","isNotEmpty","d","isBaseType","value","isNull","isUndefined","isNaN","MrEchartsServices","getOptions","reOptions","debug","setOption","e","registerEvents","chartClick","chartDblClick","chartMouseDown","chartMouseUp","chartMouseOver","chartMouseOut","chartGlobalOut","off","on","resize","bind","_assertThisInitialized","windowResize","debounce","React","ref","_this2","_this2$props$renderTy","renderType","theme","getTheme","current","renderer","prev","THEME","themeConfig","first","isExist","change","_this3","dispose","style","newStyle","Object","assign","height","addEventListener","prevProps","_this$props","className","_this$props2","force","nextData","nextOptions","nextSetting","nextChartTypes","JSON","stringify","removeEventListener","_this4","_this$props3","panelClass","MrServices","cls","mr-echarts","react__WEBPACK_IMPORTED_MODULE_0__","getStyle","div","DISPLAY_NAME","RENDER_TYPE","defaultProps","displayName","__docgenInfo","description","defaultValue","required","_gene","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","CHART_NAME","CHART_X","__webpack_exports__","_theme$_colors$CHART_","ifempty","getEchartsTheme","_colors","getEchartsColors","CHART_RENDER_TYPE","serialize","v","k","_defineProperty","rules","item","each","source","target","key","groups","groupArray","o","obj","_fn","fn","xyExchange","isExhange","_opts","lineBarExchange","series","xAxis","boundaryGap","xAxisShowAll","legendShow","_show","deleteKey","_obj","clone","test","_path","replace","_path2$split2","_slicedToArray","split","p1","p2","idx","concat","fname","groupKey","_data","max","oo","parseFloat","min","arguments","length","undefined","handle","fnn","if","$data","filter","__key__","__val__","_legend","_series","rowCalc","colCalc","_x","xd","_dataView","getDataView","x","arr","inx","legendName","unshift","i","colLen","sums","ii","sum","items","$colSum","$colRate","format","$colPercent","$colPercent2","$value","$rowSum","$rowRate","$rowPercent","$rowPercent2","or","chartType","_maxmin","maxmin","max_","min_","tmp","Math","ceil","dataMap","_chartTypes$split2","_toArray","defSubType","_chartType","_subType","slice","paramSetting","rule","_rule$split2","tempSubType","push","_subSetting","subSetting","_objectSpread","getEchartsSubTypes","_setting","extend","flatDataSetting","sub","getSetType","param","join","subType","eval","set","_set","charType","_this5","val","muSet","_dataModel","defDataModel","getSetting","defOptions","_rst","injectOptions","initOptions","mrechartsservices","__webpack_require__","lodash__WEBPACK_IMPORTED_MODULE_0__","mzmu__WEBPACK_IMPORTED_MODULE_1__","mzmu__WEBPACK_IMPORTED_MODULE_1___default","n","trigger","dataset","grid","left","right","bottom","containLabel","yAxis","treemap","indicator","wordCloud","formatter","top","text","calculable","zoom","roam","_colors$base","_baseColors","::noAxis","legend.show","yAxis[0].axisLine.show","yAxis[0].axisTick.show","yAxis[0].axisLabel.show","yAxis[0].splitArea.show","yAxis[0].splitLine.show","xAxis[0].axisLine.show","xAxis[0].axisTick.show","xAxis[0].splitArea.show","xAxis[0].splitLine.show","::stack","_ref$isStack","isStack","$$series[*].stack","::paved","::xyExchange","xAxis[0].type","yAxis[0].type","::bg","series[1].type","series[1].zlevel","series[1].barGap","series[1].animation","series[1].barCategoryGap","series[1].itemStyle.normal.color","**series[1].data","_max","::area","$$series[*].areaStyle.opacity","$$series[*].smooth","$$series[*].smoothMonotone","::tooltipFormatterPercent","tooltip.formatter","marker","::tooltipFormatterPercent2","::yAxisPercent","$$yAxis[*].axisLabel.formatter","::xAxisPercent","$$xAxis[*].axisLabel.formatter","bar::pn","xAxis[0].max","xAxis[0].min","series[0].label.formatter","_value","**$$series[0].data[*]","::percent100","**$$series[*].data","$$yAxis[*].max","bar::singleColors","bar::polar","$$series[*].coordinateSystem","**polar","angleAxis","radiusAxis","::ladder","**series","_data0","_d","pop","$$series[*].center","pie::ring","$$series[*].radius","::ringLabel","$$series[*].avoidLabelOverlap","$$series[*].selectedMode","$$series[*].label","position","lineHeight","fontSize","::hideLabel","$$series[*].label.normal.show","pie::rose","$$series[*].roseType","pie::ring::rose","series[0].roseType","series[0].radius","series[0].label.normal.show","series[1].tooltip.show","series[1].hoverAnimation","series[1].radius","series[1].center","series[1].itemStyle.borderWidth","series[1].itemStyle.borderColor","series[1].label.normal.show","visualMap.inRange.color","geo.itemStyle.emphasis.areaColor","map::china","geo.map","series[0].mapType","series[0].geoIndex","series[0].name","map::china::citys","gauge::half","grid.top","grid.left","grid.bottom","grid.right","series[0].axisTick.show","series[0].axisLabel.show","series[0].splitLine.show","series[0].startAngle","series[0].endAngle","series[0].pointer.length","series[0].pointer.width","series[0].detail","scatter::pop","$$series[*].symbol","$$series[*].symbolSize","$$series[*].label.show","$$series[*].label.emphasis.show","$$series[*].label.position","$$series[*].label.formatter","p","$$series[*].itemStyle","opacity","treemap::simple","$$series[*].left","$$series[*].right","$$series[*].top","$$series[*].bottom","$$series[*].width","$$series[*].height","$$series[*].roam","$$series[*].nodeClick","$$series[*].breadcrumb.show","$$series[*].itemStyle.borderWidth","$$series[*].itemStyle.borderColor","$$series[*].itemStyle.borderColorSaturation","$$series[*].name","radar::area","radar.splitArea.show","radar.splitLine.lineStyle.color","radar.axisLine.lineStyle.color","radar.name.color","$$series[*].areaStyle.normal.opacity","$$series[*].lineStyle.normal.opacity","::radarZero","$$radar.indicator[*].min","::radarMinZero","::radarMaximum","**$$radar.indicator[*].max","::radarMaxSome","maxItem","::radarCoaxial","$$series[*].shape","$$series[*].sizeRange","$$series[*].rotationRange","wordCloud::random","$$series[*].textStyle.normal.color","randomInt","wordCloud::randomAll","len"],"mappings":"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","file":"static/js/src-lib-mr-echarts-mr-echarts~src-lib-mr-echarts-panel-mr-echarts-panel~src-lib-mr-req-mr-req.c02b0806.js","sourcesContent":["(function(root, factory) {\n    if(typeof window.define === 'function' && window.define.amd) {\n        // AMD. Register as an anonymous module.\n        window.define(['exports', 'echarts'], factory);\n    } else if(typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        factory(exports, require('echarts'));\n    } else {\n        // Browser globals\n        factory({}, root.echarts);\n    }\n}(this, function(exports, echarts) {\n    var log = function(msg) {\n        if(typeof console !== 'undefined') {\n            console && console.error && console.error(msg);\n        }\n    }\n    if(!echarts) {\n        log('ECharts is not Loaded');\n        return;\n    }\n    if(!echarts.registerMap) {\n        log('ECharts Map is not loaded')\n        return;\n    }\n    echarts.registerMap('china', {\n        \"type\": \"FeatureCollection\",\n        \"features\": [{\n            \"id\": \"710000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@°Ü¯Û\"], [\"@@ƛĴÕƊÉɼģºðʀ\\\\ƎsÆNŌÔĚänÜƤɊĂǀĆĴĤǊŨxĚĮǂƺòƌâÔ®ĮXŦţƸZûÐƕƑGđ¨ĭMó·ęcëƝɉlÝƯֹÅŃ^Ó·śŃǋƏďíåɛGɉ¿@ăƑ¥ĘWǬÏĶŁâ\"], [\"@@\\\\p|WoYG¿¥Ij@¢\"], [\"@@¡@V^RqBbAnTXeRz¤L«³I\"], [\"@@ÆEEkWqë @\"], [\"@@fced\"]],\n                \"encodeOffsets\": [[[122886, 24033]], [[123335, 22980]], [[122375, 24193]], [[122518, 24117]], [[124427, 22618]], [[124862, 26043]]]\n            },\n            \"properties\": {\"cp\": [121.509062, 25.044332], \"name\": \"台湾\", \"childNum\": 6}\n        }, {\n            \"id\": \"130000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@o~Z]ªrºc_ħ²G¼s`jÎŸnüsÂłNX_M`Ç½ÓnUKĜēs¤­©yrý§uģcJe\"], [\"@@U`Ts¿mÂ\"], [\"@@oºƋÄdeVDJj£J|ÅdzÂFt~KŨ¸IÆv|¢r}èonb}`RÎÄn°ÒdÞ²^®lnÐèĄlðÓ×]ªÆ}LiĂ±Ö`^°Ç¶p®đDcŋ`ZÔ¶êqvFÆN®ĆTH®¦O¾IbÐã´BĐɢŴÆíȦpĐÞXR·nndO¤OÀĈƒ­QgµFo|gȒęSWb©osx|hYhgŃfmÖĩnºTÌSp¢dYĤ¶UĈjlǐpäìë|³kÛfw²Xjz~ÂqbTÑěŨ@|oMzv¢ZrÃVw¬ŧĖ¸f°ÐTªqs{S¯r æÝlNd®²Ğ ǆiGĘJ¼lr}~K¨ŸƐÌWöÆzR¤lêmĞLÎ@¡|q]SvKÑcwpÏÏĿćènĪWlĄkT}J¤~ÈTdpddʾĬBVtEÀ¢ôPĎƗè@~kü\\\\rÊĔÖæW_§¼F´©òDòjYÈrbĞāøŀG{ƀ|¦ðrb|ÀH`pʞkvGpuARhÞÆǶgĘTǼƹS£¨¡ù³ŘÍ]¿ÂyôEP xX¶¹ÜO¡gÚ¡IwÃé¦ÅBÏ|Ç°N«úmH¯âDùyŜŲIÄuĐ¨D¸dɂFOhđ©OiÃ`ww^ÌkÑH«ƇǤŗĺtFu{Z}Ö@U´ʚLg®¯Oı°Ãw ^VbÉsmAê]]w§RRl£ȭµu¯b{ÍDěïÿȧuT£ġěŗƃĝQ¨fVƋƅn­a@³@ďyÃ½IĹÊKŭfċŰóxV@tƯJ]eR¾fe|rHA|h~Ėƍl§ÏlTíb ØoÅbbx³^zÃĶ¶Sj®AyÂhðk`«PËµEFÛ¬Y¨Ļrõqi¼Wi°§Ð±´°^[À|ĠO@ÆxO\\\\ta\\\\tĕtû{ġȧXýĪÓjùÎRb^ÎfK[ÝděYfíÙTyuUSyŌŏů@Oi½éŅ­aVcř§ax¹XŻácWU£ôãºQ¨÷Ñws¥qEHÙ|šYQoŕÇyáĂ£MÃ°oťÊP¡mWO¡v{ôvîēÜISpÌhp¨ jdeŔQÖjX³àĈ[n`Yp@UcM`RKhEbpŞlNut®EtqnsÁgAiúoHqCXhfgu~ÏWP½¢G^}¯ÅīGCÑ^ãziMáļMTÃƘrMc|O_¯Ŏ´|morDkO\\\\mĆJfl@cĢ¬¢aĦtRıÒ¾ùƀ^juųœK­UFyƝīÛ÷ąV×qƥV¿aȉd³BqPBmaËđŻģmÅ®V¹d^KKonYg¯XhqaLdu¥Ípǅ¡KąÅkĝęěhq}HyÃ]¹ǧ£Í÷¿qáµ§g¤o^á¾ZE¤i`ĳ{nOl»WÝĔįhgF[¿¡ßkOüš_ūiǱàUtėGyl}ÓM}jpEC~¡FtoQiHkk{Ãmï\"]],\n                \"encodeOffsets\": [[[119712, 40641]], [[121616, 39981]], [[116462, 37237]]]\n            },\n            \"properties\": {\"cp\": [114.502461, 38.045474], \"name\": \"河北\", \"childNum\": 3}\n        }, {\n            \"id\": \"140000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@ÞĩÒSra}ÁyWix±Üe´lèßÓǏokćiµVZģ¡coTSË¹ĪmnÕńehZg{gtwªpXaĚThȑp{¶Eh®RćƑP¿£Pmc¸mQÝWďȥoÅîɡųAďä³aÏJ½¥PG­ąSM­EÅruµéYÓŌ_dĒCo­Èµ]¯_²ÕjāK~©ÅØ^ÔkïçămÏk]­±cÝ¯ÑÃmQÍ~_apm~ç¡qu{JÅŧ·Ls}EyÁÆcI{¤IiCfUcƌÃp§]ě«vD@¡SÀµMÅwuYY¡DbÑc¡h×]nkoQdaMç~eDÛtT©±@¥ù@É¡ZcW|WqOJmĩl«ħşvOÓ«IqăV¥D[mI~Ó¢cehiÍ]Ɠ~ĥqX·eƷn±}v[ěďŕ]_œ`¹§ÕōIo©b­s^}Ét±ū«³p£ÿ·Wµ|¡¥ăFÏs×¥ŅxÊdÒ{ºvĴÎêÌɊ²¶ü¨|ÞƸµȲLLúÉƎ¤ϊęĔV`_bªS^|dzY|dz¥pZbÆ£¶ÒK}tĦÔņƠPYznÍvX¶Ěn ĠÔzý¦ª÷ÑĸÙUȌ¸dòÜJð´ìúNM¬XZ´¤ŊǸ_tldI{¦ƀðĠȤ¥NehXnYGR° ƬDj¬¸|CĞKqºfƐiĺ©ª~ĆOQª ¤@ìǦɌ²æBÊTŸʂōĖĴŞȀÆÿȄlŤĒötÎ½î¼ĨXh|ªM¤Ðz\"],\n                \"encodeOffsets\": [[116874, 41716]]\n            },\n            \"properties\": {\"cp\": [112.549248, 37.857014], \"name\": \"山西\", \"childNum\": 1}\n        }, {\n            \"id\": \"150000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@Č^â£ĂhĖMÈÄw\\\\fŦ°W ¢¾luŸDw\\\\̀ʉÌÛMĀ[bÓEn}¶Vcês¯PqFB|S³C|kñHdiÄ¥sŉÅPóÑÑE^ÅPpy_YtShQ·aHwsOnŉÃs©iqjUSiº]ïW«gW¡ARëśĳĘů`çõh]y»ǃǛҤxÒm~zf}pf|ÜroÈzrKÈĵSƧż؜Ġu¦ö\"], [\"@@sKCGS|úþXgp{ÁX¿ć{ƱȏñZáĔyoÁhA}ŅĆfdŉ_¹Y°ėǩÑ¡H¯¶oMQqð¡Ë|Ñ`ƭŁX½·óÛxğįÅcQs«tȋǅFù^it«Č¯[hAi©á¥ÇĚ×l|¹y¯YȵƓñǙµïċĻ|Düȭ¶¡oŽäÕG\\\\ÄT¿Òõr¯LguÏYęRƩɷŌO\\\\İÐ¢æ^Ŋ ĲȶȆbÜGĝ¬¿ĚVĎgª^íu½jÿĕęjık@Ľ]ėl¥ËĭûÁėéV©±ćn©­ȇÍq¯½YÃÔŉÉNÑÅÝy¹NqáʅDǡËñ­ƁYÅy̱os§ȋµʽǘǏƬɱàưN¢ƔÊuľýľώȪƺɂļxZĈ}ÌŉŪĺœĭFЛĽ̅ȣͽÒŵìƩÇϋÿȮǡŏçƑůĕ~Ç¼ȳÐUfdIxÿ\\\\G zâɏÙOº·pqy£@qþ@Ǟ˽IBäƣzsÂZÁàĻdñ°ŕzéØűzșCìDȐĴĺf®Àľưø@ɜÖÞKĊŇƄ§͑těï͡VAġÑÑ»d³öǍÝXĉĕÖ{þĉu¸ËʅğU̎éhɹƆ̗̮ȘǊ֥ड़ࡰţાíϲäʮW¬®ҌeרūȠkɬɻ̼ãüfƠSצɩςåȈHϚÎKǳͲOðÏȆƘ¼CϚǚ࢚˼ФÔ¤ƌĞ̪Qʤ´¼mȠJˀƲÀɠmǐnǔĎȆÞǠN~ʢĜ¶ƌĆĘźʆȬ˪ĚĒ¸ĞGȖƴƀj`ĢçĶāàŃºēĢĖćYÀŎüôQÐÂŎŞǆŞêƖoˆDĤÕºÑǘÛˤ³̀gńƘĔÀ^ªƂ`ªt¾äƚêĦĀ¼ÐĔǎ¨Ȕ»͠^ˮÊȦƤøxRrŜH¤¸ÂxDÄ|ø˂˜ƮÐ¬ɚwɲFjĔ²Äw°ǆdÀÉ_ĸdîàŎjÊêTĞªŌŜWÈ|tqĢUB~´°ÎFCU¼pĀēƄN¦¾O¶łKĊOjĚj´ĜYp{¦SĚÍ\\\\T×ªV÷Ší¨ÅDK°ßtŇĔK¨ǵÂcḷ̌ĚǣȄĽFlġUĵŇȣFʉɁMğįʏƶɷØŭOǽ«ƽū¹Ʊő̝Ȩ§ȞʘĖiɜɶʦ}¨֪ࠜ̀ƇǬ¹ǨE˦ĥªÔêFxúQEr´Wrh¤Ɛ \\\\talĈDJÜ|[Pll̚¸ƎGú´P¬W¦^¦H]prRn|or¾wLVnÇIujkmon£cX^Bh`¥V¦U¤¸}xRj[^xN[~ªxQ[`ªHÆÂExx^wN¶Ê|¨ìMrdYpoRzNyÀDs~bcfÌ`L¾n|¾T°c¨È¢ar¤`[|òDŞĔöxElÖdHÀI`Ď\\\\Àì~ÆR¼tf¦^¢ķ¶eÐÚMptgjɡČÅyġLûŇV®ÄÈƀĎ°P|ªVVªj¬ĚÒêp¬E|ŬÂc|ÀtƐK f{ĘFĒƌXƲąo½Ę\\\\¥o}Ûu£ç­kX{uĩ«āíÓUŅßŢqŤ¥lyň[oi{¦LńðFȪȖĒL¿Ìf£K£ʺoqNwğc`uetOj×°KJ±qÆġmĚŗos¬qehqsuH{¸kH¡ÊRǪÇƌbȆ¢´äÜ¢NìÉʖ¦â©Ż؛Ç@Vu»Aylßí¹ĵêÝlISò³C¹Ìâ²i¶Ìoú^H²CǜңǄ z¼g^èöŰ_Ĳĕê}gÁnUI«m]jvV¼euhwqAaW_µj»çjioQR¹ēÃßt@r³[ÛlćË^ÍÉáGOUÛOB±XkÅ¹£k|e]olkVÍ¼ÕqtaÏõjgÁ£§U^RLËnX°ÇBz^~wfvypV ¯ƫĉ˭ȫƗŷɿÿĿƑ˃ĝÿÃǃßËőó©ǐȍŒĖM×ÍEyxþp]ÉvïèvƀnÂĴÖ@V~Ĉ³MEĸÅĖtējyÄDXÄxGQuv_i¦aBçw˛wD©{tāmQ{EJ§KPśƘƿ¥@sCTÉ}ɃwƇy±gÑ}T[÷kÐç¦«SÒ¥¸ëBX½HáÅµÀğtSÝÂa[ƣ°¯¦Pï¡]£ġÒk®G²èQ°óMq}EóƐÇ\\\\@áügQÍu¥FTÕ¿Jû]|mvāÎYua^WoÀa·­ząÒot×¶CLƗi¯¤mƎHǊ¤îìɾŊìTdåwsRÖgĒųúÍġäÕ}Q¶¿A[¡{d×uQAMxVvMOmăl«ct[wº_ÇÊjbÂ£ĦS_éQZ_lwgOiýe`YYLq§IÁǳ£ÙË[ÕªuƏ³ÍTs·bÁĽäė[b[ŗfãcn¥îC¿÷µ[ŏÀQ­ōĉm¿Á^£mJVmL[{Ï_£F¥Ö{ŹA}×Wu©ÅaųĳƳhB{·TQqÙIķËZđ©Yc|M¡LeVUóK_QWk_ĥ¿ãZ»X\\\\ĴuUèlG®ěłTĠğDŃOrÍdÆÍz]±ŭ©Å]ÅÐ}UË¥©TċïxgckfWgi\\\\ÏĒ¥HkµEë{»ÏetcG±ahUiñiWsɁ·cCÕk]wȑ|ća}wVaĚá G°ùnM¬¯{ÈÐÆA¥ÄêJxÙ¢hP¢ÛºµwWOóFÁz^ÀŗÎú´§¢T¤ǻƺSėǵhÝÅQgvBHouʝl_o¿Ga{ïq{¥|ſĿHĂ÷aĝÇqZñiñC³ª»E`¨åXēÕqÉû[l}ç@čƘóO¿¡FUsAʽīccocÇS}£IS~ălkĩXçmĈŀÐoÐdxÒuL^T{r@¢ÍĝKén£kQyÅõËXŷƏL§~}kq»IHėǅjĝ»ÑÞoå°qTt|r©ÏS¯·eŨĕx«È[eM¿yupN~¹ÏyN£{©għWí»Í¾səšǅ_ÃĀɗ±ąĳĉʍŌŷSÉA±åǥɋ@ë£R©ąP©}ĹªƏj¹erLDĝ·{i«ƫC£µ\"]],\n                \"encodeOffsets\": [[[127444, 52594]], [[113793, 40312]]]\n            },\n            \"properties\": {\"cp\": [111.670801, 40.818311], \"name\": \"内蒙古\", \"childNum\": 2}\n        }, {\n            \"id\": \"210000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@L@@sa\"], [\"@@MnNm\"], [\"@@dc\"], [\"@@eÀC@b\"], [\"@@fXwkbrÄ`qg\"], [\"@@^jtWQ\"], [\"@@~ Y]c\"], [\"@@G`ĔN^_¿ZÃM\"], [\"@@iX¶BY\"], [\"@@YZ\"], [\"@@L_{Epf\"], [\"@@^WqCT\\\\\"], [\"@@\\\\[§t|¤_\"], [\"@@m`n_\"], [\"@@Ïxǌ{q_×^Giip\"], [\"@@@é^BntaÊU]x ¯ÄPĲ­°hʙK³VÕ@Y~|EvĹsÇ¦­L^pÃ²ŸÒG Ël]xxÄ_fT¤Ď¤cPC¨¸TVjbgH²sdÎdHt`B²¬GJję¶[ÐhjeXdlwhðSČ¦ªVÊÏÆZÆŶ®²^ÎyÅÎcPqńĚDMħĜŁH­kçvV[ĳ¼WYÀäĦ`XlR`ôLUVfK¢{NZdĒªYĸÌÚJRr¸SA|ƴgŴĴÆbvªØX~źB|¦ÕE¤Ð`\\\\|KUnnI]¤ÀÂĊnŎR®Ő¿¶\\\\ÀøíDm¦ÎbŨabaĘ\\\\ľãÂ¸atÎSƐ´©v\\\\ÖÚÌǴ¤Â¨JKrZ_ZfjþhPkx`YRIjJcVf~sCN¤ EhæmsHy¨SðÑÌ\\\\\\\\ĐRZk°IS§fqŒßýáĞÙÉÖ[^¯ǤŲê´\\\\¦¬ĆPM¯£»uïpùzExanµyoluqe¦W^£ÊL}ñrkqWňûPUP¡ôJoo·U}£[·¨@XĸDXm­ÛÝºGUCÁª½{íĂ^cjk¶Ã[q¤LÉö³cux«zZf²BWÇ®Yß½ve±ÃCý£W{Ú^q^sÑ·¨ÍOt¹·C¥GDrí@wÕKţÃ«V·i}xËÍ÷i©ĝɝǡ]{c±OW³Ya±_ç©HĕoƫŇqr³Lys[ñ³¯OSďOMisZ±ÅFC¥Pq{Ã[Pg}\\\\¿ghćOk^ģÁFıĉĥM­oEqqZûěŉ³F¦oĵhÕP{¯~TÍlªNßYÐ{Ps{ÃVUeĎwk±ŉVÓ½ŽJãÇÇ»Jm°dhcÀffdF~ĀeĖd`sx² ®EżĀdQÂd^~ăÔH¦\\\\LKpĄVez¤NP ǹÓRÆąJSh­a[¦´ÂghwmBÐ¨źhI|VV|p] Â¼èNä¶ÜBÖ¼L`¼bØæKVpoúNZÞÒKxpw|ÊEMnzEQIZZNBčÚFÜçmĩWĪñtÞĵÇñZ«uD±|Əlĳ¥ãn·±PmÍada CLǑkùó¡³Ï«QaċÏOÃ¥ÕđQȥċƭy³ÃA\"]],\n                \"encodeOffsets\": [[[123686, 41445]], [[126019, 40435]], [[124393, 40128]], [[126117, 39963]], [[125322, 40140]], [[126686, 40700]], [[126041, 40374]], [[125584, 40168]], [[125453, 40165]], [[125362, 40214]], [[125280, 40291]], [[125774, 39997]], [[125976, 40496]], [[125822, 39993]], [[125509, 40217]], [[122731, 40949]]]\n            },\n            \"properties\": {\"cp\": [123.429096, 41.796767], \"name\": \"辽宁\", \"childNum\": 16}\n        }, {\n            \"id\": \"220000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@pä³PClFbbÍzwBGĭZÅi»lY­ċ²SgkÇ£^Sqd¯R©é£¯S\\\\cZ¹iűƏCuƍÓXoR}M^o£R}oªU­FuuXHlEÅÏ©¤ÛmTþ¤D²ÄufàÀ­XXÈ±AeyYw¬dvõ´KÊ£\\\\rµÄlidā]|î©¾DÂVH¹Þ®ÜWnCķ W§@\\\\¸~¤Vp¸póIO¢VOŇürXql~òÉK]¤¥Xrfkvzpm¶bwyFoúvð¼¤ N°ąO¥«³[éǡű_°Õ\\\\ÚÊĝþâőàerR¨­JYlďQ[ ÏYëÐ§TGztnß¡gFkMāGÁ¤ia ÉÈ¹`\\\\xs¬dĆkNnuNUuP@vRY¾\\\\¢GªóĄ~RãÖÎĢùđŴÕhQxtcæëSɽŉíëǉ£ƍG£nj°KƘµDsØÑpyĆ¸®¿bXp]vbÍZuĂ{n^IüÀSÖ¦EvRÎûh@â[ƏÈô~FNr¯ôçR±­HÑlĢ^¤¢OðævxsŒ]ÞÁTĠs¶¿âÆGW¾ìA¦·TÑ¬è¥ÏÐJ¨¼ÒÖ¼ƦɄxÊ~StD@Ă¼Ŵ¡jlºWvÐzƦZÐ²CH AxiukdGgetqmcÛ£Ozy¥cE}|¾cZk¿uŐã[oxGikfeäT@SUwpiÚFM©£è^Ú`@v¶eňf heP¶täOlÃUgÞzŸU`l}ÔÆUvØ_Ō¬Öi^ĉi§²ÃB~¡ĈÚEgc|DC_Ȧm²rBx¼MÔ¦ŮdĨÃâYxƘDVÇĺĿg¿cwÅ\\\\¹¥Yĭl¤OvLjM_a W`zļMž·\\\\swqÝSAqŚĳ¯°kRē°wx^ĐkǂÒ\\\\]nrĂ}²ĊŲÒøãh·M{yMzysěnĒġV·°G³¼XÀ¤¹i´o¤ŃÈ`ÌǲÄUĞd\\\\iÖmÈBĤÜɲDEh LG¾ƀÄ¾{WaYÍÈĢĘÔRîĐj}ÇccjoUb½{h§Ǿ{KƖµÎ÷GĀÖŠåưÎs­lyiē«`å§H¥Ae^§GK}iã\\\\c]v©ģZmÃ|[M}ģTɟĵÂÂ`ÀçmFK¥ÚíÁbX³ÌQÒHof{]ept·GŋĜYünĎųVY^ydõkÅZW«WUa~U·SbwGçǑiW^qFuNĝ·EwUtW·Ýďæ©PuqEzwAVXRãQ`­©GMehccďÏd©ÑW_ÏYƅ»é\\\\ɹ~ǙG³mØ©BšuT§Ĥ½¢Ã_Ã½L¡ýqT^rme\\\\PpZZbyuybQefµ]UhĿDCmûvaÙNSkCwncćfv~YÇG\"],\n                \"encodeOffsets\": [[130196, 42528]]\n            },\n            \"properties\": {\"cp\": [125.3245, 43.886841], \"name\": \"吉林\", \"childNum\": 1}\n        }, {\n            \"id\": \"230000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@ƨĶTLÇyqpÇÛqe{~oyen}s`qiXGù]Ëp½©lÉÁp]Þñ´FĂ^fäîºkàz¼BUvÈ@\"], [\"@@UµNÿ¥īèçHÍøƕ¶Lǽ|g¨|a¾pVidd~ÈiíďÓQġėÇZÎXb½|ſÃH½KFgɱCģÛÇAnjÕc[VĝǱÃËÇ_ £ń³pj£º¿»WH´¯U¸đĢmtĜyzzNN|g¸÷äűÑ±ĉā~mq^[ǁÑďlw]¯xQĔ¯l°řĴrBÞTxr[tŽ¸ĻN_yX`biNKuP£kZĮ¦[ºxÆÀdhĹŀUÈƗCwáZħÄŭcÓ¥»NAw±qȥnD`{ChdÙFć}¢A±Äj¨]ĊÕjŋ«×`VuÓÅ~_kŷVÝyhVkÄãPsOµfgeŇµf@u_Ù ÙcªNªÙEojVxT@ãSefjlwH\\\\pŏäÀvlY½d{F~¦dyz¤PÜndsrhfHcvlwjF£G±DÏƥYyÏu¹XikĿ¦ÏqƗǀOŜ¨LI|FRĂn sª|C˜zxAè¥bfudTrFWÁ¹Am|ĔĕsķÆF´N}ćUÕ@Áĳſmuçuð^ÊýowFzØÎĕNőǏȎôªÌŒǄàĀÄ˄ĞŀƒʀĀƘŸˮȬƬĊ°Uzouxe]}AyÈW¯ÌmKQ]Īºif¸ÄX|sZt|½ÚUÎ lk^p{f¤lºlÆW A²PVÜPHÊâ]ÎĈÌÜk´\\\\@qàsĔÄQºpRij¼èi`¶bXrBgxfv»uUi^v~J¬mVp´£´VWrnP½ì¢BX¬hðX¹^TjVriªjtŊÄmtPGx¸bgRsT`ZozÆO]ÒFôÒOÆŊvÅpcGêsx´DR{AEOr°x|íb³Wm~DVjºéNNËÜ˛ɶ­GxŷCSt}]ûōSmtuÇÃĕNāg»íT«u}ç½BĵÞʣ¥ëÊ¡MÛ³ãȅ¡ƋaǩÈÉQG¢·lG|tvgrrf«ptęŘnÅĢrI²¯LiØsPf_vĠdxM prʹL¤¤eËÀđKïÙVY§]Ióáĥ]ķK¥j|pŇ\\\\kzţ¦šnņäÔVĂîĪ¬|vW®l¤èØrxm¶ă~lÄƯĄ̈́öȄEÔ¤ØQĄĄ»ƢjȦOǺ¨ìSŖÆƬyQv`cwZSÌ®ü±Ǆ]ŀç¬B¬©ńzƺŷɄeeOĨSfm ĊƀP̎ēz©ĊÄÕÊmgÇsJ¥ƔŊśæÎÑqv¿íUOµªÂnĦÁ_½ä@êí£P}Ġ[@gġ}gɊ×ûÏWXá¢užƻÌsNÍ½ƎÁ§čŐAēeL³àydl¦ĘVçŁpśǆĽĺſÊQíÜçÛġÔsĕ¬Ǹ¯YßċġHµ ¡eå`ļrĉŘóƢFìĎWøxÊkƈdƬv|I|·©NqńRŀ¤éeŊŀàŀU²ŕƀBQ£Ď}L¹Îk@©ĈuǰųǨÚ§ƈnTËÇéƟÊcfčŤ^XmHĊĕË«W·ċëx³ǔķÐċJāwİ_ĸȀ^ôWr­°oú¬ĦŨK~ȰCĐ´Ƕ£fNÎèâw¢XnŮeÂÆĶ¾¾xäLĴĘlļO¤ÒĨA¢Êɚ¨®ØCÔ ŬGƠƦYĜĘÜƬDJg_ͥœ@čŅĻA¶¯@wÎqC½Ĉ»NăëKďÍQÙƫ[«ÃígßÔÇOÝáWñuZ¯ĥŕā¡ÑķJu¤E å¯°WKÉ±_d_}}vyõu¬ï¹ÓU±½@gÏ¿rÃ½DgCdµ°MFYxw¿CG£Rƛ½Õ{]L§{qqą¿BÇƻğëܭǊË|c²}Fµ}ÙRsÓpg±QNqǫŋRwŕnéÑÉK«SeYRŋ@{¤SJ}D Ûǖ֍]gr¡µŷjqWÛham³~S«Þ]\"]],\n                \"encodeOffsets\": [[[127123, 51780]], [[134456, 44547]]]\n            },\n            \"properties\": {\"cp\": [126.642464, 45.756967], \"name\": \"黑龙江\", \"childNum\": 2}\n        }, {\n            \"id\": \"320000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@cþÅPi`ZRu¥É\\\\]~°Y`µÓ^phÁbnÀşúòaĬºTÖŒbe¦¦{¸ZâćNp©Hr|^mjhSEb\\\\afv`sz^lkljÄtg¤D­¾X¿À|ĐiZȀåB·î}GL¢õcßjayBFµÏC^ĭcÙt¿sğH]j{s©HM¢QnDÀ©DaÜÞ·jgàiDbPufjDk`dPOîhw¡ĥ¥GP²ĐobºrYî¶aHŢ´ ]´rılw³r_{£DB_Ûdåuk|Ũ¯F Cºyr{XFye³Þċ¿ÂkĭB¿MvÛpm`rÚã@Ę¹hågËÖƿxnlč¶Åì½Ot¾dJlVJĂǀŞqvnO^JZż·Q}êÍÅmµÒ]ƍ¦Dq}¬R^èĂ´ŀĻĊIÔtĲyQŐĠMNtR®òLhĚs©»}OÓGZz¶A\\\\jĨFäOĤHYJvÞHNiÜaĎÉnFQlNM¤B´ĄNöɂtpŬdfåqm¿QûùŞÚb¤uŃJŴu»¹ĄlȖħŴw̌ŵ²ǹǠ͛hĭłƕrçü±Yxcitğ®jű¢KOķCoy`å®VTa­_Ā]ŐÝɞï²ʯÊ^]afYǸÃĆēĪȣJđ͍ôƋÄÄÍīçÛɈǥ£­ÛmY`ó£Z«§°Ó³QafusNıǅ_k}¢m[ÝóDµ¡RLčiXyÅNïă¡¸iĔÏNÌŕoēdōîåŤûHcs}~Ûwbù¹£¦ÓCtOPrE^ÒogĉIµÛÅʹK¤½phMü`oæŀ\"],\n                \"encodeOffsets\": [[121740, 32276]]\n            },\n            \"properties\": {\"cp\": [118.767413, 32.041544], \"name\": \"江苏\", \"childNum\": 1}\n        }, {\n            \"id\": \"330000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@E^dQ]K\"], [\"@@jX^j\"], [\"@@sfbU\"], [\"@@qP\\\\xz[ck\"], [\"@@R¢FX}°[s_\"], [\"@@Cb\\\\}\"], [\"@@e|v\\\\la{u\"], [\"@@v~u}\"], [\"@@QxÂF¯}\"], [\"@@¹nvÞs¯o\"], [\"@@rSkUEj\"], [\"@@bi­ZP\"], [\"@@p[}INf\"], [\"@@À¿\"], [\"@@¹dnb\"], [\"@@rSBnR\"], [\"@@g~h}\"], [\"@@FlEk\"], [\"@@OdPc\"], [\"@@v[u\\\\\"], [\"@@FjâL~wyoo~sµL\\\\\"], [\"@@¬e¹aN\"], [\"@@\\\\nÔ¡q]L³ë\\\\ÿ®QÖ\"], [\"@@ÊA­©[¬\"], [\"@@Kxv­\"], [\"@@@hlIk]\"], [\"@@pW{o||j\"], [\"@@Md|_mC\"], [\"@@¢X£ÏylD¼XtH\"], [\"@@hlÜ[LykAvyfw^E¤\"], [\"@@fp¤MusR\"], [\"@@®_ma~LÁ¬Z\"], [\"@@iMxZ\"], [\"@@ZcYd\"], [\"@@Z~dOSo|A¿qZv\"], [\"@@@`EN¡v\"], [\"@@|TY{\"], [\"@@@n@m\"], [\"@@XWkCT\\\\\"], [\"@@ºwZRkĕWO¢\"], [\"@@X®±GrÆª\\\\ÔáXq{\"], [\"@@ůTG°ĄLHm°UC\"], [\"@@¤aÜx~}dtüGæţŎíĔcŖpMËÐjē¢·ðĄÆMzjWKĎ¢Q¶À_ê_Bıi«pZgf¤Nrq]§ĂN®«H±yƳí¾×ŸīàLłčŴǝĂíÀBŖÕªÁŖHŗŉåqûõi¨hÜ·ñt»¹ýv_[«¸mYL¯QªmĉÅdMgÇjcº«ę¬­K­´B«Âącoċ\\\\xKd¡gěŧ«®á[~ıxu·ÅKsËÉc¢Ù\\\\ĭƛëbf¹­ģSĜkáƉÔ­ĈZB{aMµfzŉfåÂŧįƋǝÊĕġć£g³ne­ą»@­¦S®\\\\ßðChiqªĭiAuA­µ_W¥ƣO\\\\lċĢttC¨£t`PZäuXßBsĻyekOđġĵHuXBµ]×­­\\\\°®¬F¢¾pµ¼kŘó¬Wät¸|@L¨¸µrºù³Ù~§WIZW®±Ð¨ÒÉx`²pĜrOògtÁZ}þÙ]¡FKwsPlU[}¦Rvn`hq¬\\\\nQ´ĘRWb_ rtČFIÖkĦPJ¶ÖÀÖJĈĄTĚòC ²@PúØz©Pî¢£CÈÚĒ±hŖl¬â~nm¨f©iļ«mntuÖZÜÄjL®EÌFª²iÊxØ¨IÈhhst\"], [\"@@o\\\\VzRZ}y\"], [\"@@@°¡mÛGĕ¨§Ianá[ýƤjfæØLäGr\"]],\n                \"encodeOffsets\": [[[125592, 31553]], [[125785, 31436]], [[125729, 31431]], [[125513, 31380]], [[125223, 30438]], [[125115, 30114]], [[124815, 29155]], [[124419, 28746]], [[124095, 28635]], [[124005, 28609]], [[125000, 30713]], [[125111, 30698]], [[125078, 30682]], [[125150, 30684]], [[124014, 28103]], [[125008, 31331]], [[125411, 31468]], [[125329, 31479]], [[125626, 30916]], [[125417, 30956]], [[125254, 30976]], [[125199, 30997]], [[125095, 31058]], [[125083, 30915]], [[124885, 31015]], [[125218, 30798]], [[124867, 30838]], [[124755, 30788]], [[124802, 30809]], [[125267, 30657]], [[125218, 30578]], [[125200, 30562]], [[124968, 30474]], [[125167, 30396]], [[124955, 29879]], [[124714, 29781]], [[124762, 29462]], [[124325, 28754]], [[123990, 28459]], [[125366, 31477]], [[125115, 30363]], [[125369, 31139]], [[122495, 31878]], [[125329, 30690]], [[125192, 30787]]]\n            },\n            \"properties\": {\"cp\": [120.153576, 30.287459], \"name\": \"浙江\", \"childNum\": 45}\n        }, {\n            \"id\": \"340000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@^iuLX^\"], [\"@@e©Ehl\"], [\"@@°ZÆëĎµmkǀwÌÕæhºgBĝâqÙĊzÖgņtÀÁĂÆáhEz|WzqD¹°Eŧl{ævÜcA`¤C`|´qxĲkq^³³GšµbíZ¹qpa±ď OH¦Ħx¢gPícOl_iCveaOjChß¸iÝbÛªCC¿mRV§¢A|t^iĠGÀtÚsd]ĮÐDE¶zAb àiödK¡~H¸íæAǿYj{ď¿À½W®£ChÃsikkly]_teu[bFaTign{]GqªoĈMYá|·¥f¥őaSÕėNµñĞ«Im_m¿Âa]uĜp Z_§{Cäg¤°r[_YjÆOdý[I[á·¥Q_nùgL¾mvˊBÜÆ¶ĊJhpc¹O]iŠ]¥ jtsggJÇ§w×jÉ©±EFË­KiÛÃÕYvsm¬njĻª§emná}k«ŕgđ²ÙDÇ¤í¡ªOy×Où±@DñSęćăÕIÕ¿IµĥOjNÕËT¡¿tNæŇàåyķrĕq§ÄĩsWÆßF¶X®¿mwRIÞfßoG³¾©uyHį{Ɓħ¯AFnuPÍÔzVdàôº^Ðæd´oG¤{S¬ćxã}ŧ×Kǥĩ«ÕOEÐ·ÖdÖsƘÑ¨[Û^Xr¢¼§xvÄÆµ`K§ tÒ´Cvlo¸fzŨð¾NY´ı~ÉĔēßúLÃÃ_ÈÏ|]ÂÏFlg`ben¾¢pUh~ƴĖ¶_r sĄ~cƈ]|r c~`¼{À{ȒiJjz`îÀT¥Û³]u}fïQl{skloNdjäËzDvčoQďHI¦rbtHĔ~BmlRV_ħTLnñH±DL¼Lªl§Ťa¸ĚlK²\\\\RòvDcÎJbt[¤D@®hh~kt°ǾzÖ@¾ªdbYhüóZ ň¶vHrľ\\\\ÊJuxAT|dmÀO[ÃÔG·ĚąĐlŪÚpSJ¨ĸLvÞcPæķŨ®mÐálwKhïgA¢ųÆ©Þ¤OÈm°K´\"]],\n                \"encodeOffsets\": [[[121722, 32278]], [[119475, 30423]], [[119168, 35472]]]\n            },\n            \"properties\": {\"cp\": [117.283042, 31.86119], \"name\": \"安徽\", \"childNum\": 3}\n        }, {\n            \"id\": \"350000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@zht´]\"], [\"@@aj^~ĆG©O\"], [\"@@ed¨C}}i\"], [\"@@@vPGsQ\"], [\"@@sBzddW]Q\"], [\"@@S¨Q{\"], [\"@@NVucW\"], [\"@@qptBAq\"], [\"@@¸[mu\"], [\"@@Q\\\\pD]_\"], [\"@@jSwUadpF\"], [\"@@eXª~\"], [\"@@AjvFso\"], [\"@@fT_Çí\\\\v|ba¦jZÆy°\"], [\"@@IjJi\"], [\"@@wJIx«¼AoNe{M­\"], [\"@@K±¡ÓČäeZ\"], [\"@@k¡¹Eh~c®wBkUplÀ¡I~Māe£bN¨gZý¡a±Öcp©PhI¢QqÇGj|¥U g[Ky¬ŏv@OptÉEF\\\\@ åA¬V{XģĐBycpě¼³Ăp·¤¥ohqqÚ¡ŅLs^Ã¡§qlÀhH¨MCe»åÇGD¥zPO£čÙkJA¼ßėuĕeûÒiÁŧSW¥Qûŗ½ùěcÝ§SùĩąSWó«íęACµeRåǃRCÒÇZÍ¢ź±^dlstjD¸ZpuÔâÃH¾oLUêÃÔjjēò´ĄWƛ^Ñ¥Ħ@ÇòmOw¡õyJyD}¢ďÑÈġfZda©º²z£NjD°Ötj¶¬ZSÎ~¾c°¶ÐmxO¸¢Pl´SL|¥AȪĖMņĲg®áIJČĒü` QF¬h|ĂJ@zµ |ê³È ¸UÖŬŬÀEttĸr]ðM¤ĶĲHtÏ AĬkvsq^aÎbvdfÊòSD´Z^xPsĂrvƞŀjJd×ŘÉ ®AÎ¦ĤdxĆqAZRÀMźnĊ»İÐZ YXæJyĊ²·¶q§·K@·{sXãô«lŗ¶»o½E¡­«¢±¨Y®Ø¶^AvWĶGĒĢPlzfļtàAvWYãO_¤sD§ssČġ[kƤPX¦`¶®BBvĪjv©jx[L¥àï[F¼ÍË»ğV`«Ip}ccÅĥZEãoP´B@D¸m±z«Ƴ¿å³BRØ¶Wlâþäą`]Z£Tc ĹGµ¶Hm@_©k¾xĨôȉðX«½đCIbćqK³ÁÄš¬OAwã»aLŉËĥW[ÂGIÂNxĳ¤D¢îĎÎB§°_JGs¥E@¤ućPåcuMuw¢BI¿]zG¹guĮck\\\\_\"]],\n                \"encodeOffsets\": [[[123250, 27563]], [[122541, 27268]], [[123020, 27189]], [[122916, 27125]], [[122887, 26845]], [[122808, 26762]], [[122568, 25912]], [[122778, 26197]], [[122515, 26757]], [[122816, 26587]], [[123388, 27005]], [[122450, 26243]], [[122578, 25962]], [[121255, 25103]], [[120987, 24903]], [[122339, 25802]], [[121042, 25093]], [[122439, 26024]]]\n            },\n            \"properties\": {\"cp\": [119.306239, 26.075302], \"name\": \"福建\", \"childNum\": 18}\n        }, {\n            \"id\": \"360000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@ĢĨƐgļ¼ÂMD~ņªe^\\\\^§ý©j×cZØ¨zdÒa¶lÒJìõ`oz÷@¤uŞ¸´ôęöY¼HČƶajlÞƩ¥éZ[|h}^U  ¥pĄžƦO lt¸Æ Q\\\\aÆ|CnÂOjt­ĚĤdÈF`¶@Ðë ¦ōÒ¨SêvHĢûXD®QgÄWiØPÞìºr¤ǆNĠ¢lĄtZoCƞÔºCxrpĠV®Ê{f_Y`_eq®Aot`@oDXfkp¨|s¬\\\\DÄSfè©Hn¬^DhÆyøJhØxĢĀLÊƠPżċĄwȠĚ¦G®ǒĤäTŠÆ~Ħw«|TF¡nc³Ïå¹]ĉđxe{ÎÓvOEm°BƂĨİ|Gvz½ª´HàpeJÝQxnÀW­EµàXÅĪt¨ÃĖrÄwÀFÎ|ňÓMå¼ibµ¯»åDT±m[r«_gmQu~¥V\\\\OkxtL E¢Ú^~ýêPóqoě±_Êw§ÑªåƗā¼mĉŹ¿NQYBąrwģcÍ¥B­ŗÊcØiIƝĿuqtāwO]³YCñTeÉcaubÍ]trluīBÐGsĵıN£ï^ķqss¿FūūVÕ·´Ç{éĈýÿOER_đûIċâJh­ŅıNȩĕB¦K{Tk³¡OP·wnµÏd¯}½TÍ«YiµÕsC¯iM¤­¦¯P|ÿUHvhe¥oFTuõ\\\\OSsMòđƇiaºćXĊĵà·çhƃ÷Ç{ígu^đgm[×zkKN¶Õ»lčÓ{XSÆv©_ÈëJbVkĔVÀ¤P¾ºÈMÖxlò~ªÚàGĂ¢B±ÌKyáV¼Ã~­`gsÙfIƋlę¹e|~udjuTlXµf`¿Jd[\\\\L²\"],\n                \"encodeOffsets\": [[116689, 26234]]\n            },\n            \"properties\": {\"cp\": [115.892151, 28.676493], \"name\": \"江西\", \"childNum\": 1}\n        }, {\n            \"id\": \"370000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@Xjd]{K\"], [\"@@itbFHy\"], [\"@@HlGk\"], [\"@@TGy\"], [\"@@K¬U\"], [\"@@WdXc\"], [\"@@PtOs\"], [\"@@LnXhc\"], [\"@@ppVu]Or\"], [\"@@cdzAUa\"], [\"@@udRhnCI\"], [\"@@oIpR\"], [\"@@Ľč{fzƤîKÎMĮ]ZF½Y]â£ph¶¨râøÀÎǨ¤^ºÄGz~grĚĜlĞÆLĆǆ¢Îo¦cvKbgr°WhmZp L]LºcUÆ­nżĤÌĒbAnrOA´ȊcÀbƦUØrĆUÜøĬƞEzVL®öØBkŖÝĐĖ¹ŧ̄±ÀbÎÉnb²ĦhņBĖįĦåXćì@L¯´ywƕCéÃµė ƿ¸lµ¾Z|ZWyFY¨Mf~C¿`à_RÇzwƌfQnny´INoƬèôº|sTJULîVjǎ¾ĒØDz²XPn±ŴPè¸ŔLƔÜƺ_TüÃĤBBċÈöA´faM¨{«M`¶d¡ôÖ°mȰBÔjj´PM|c^d¤u¤Û´ä«ƢfPk¶Môl]Lb}su^ke{lCMrDÇ­]NÑFsmoõľHyGă{{çrnÓEƕZGª¹Fj¢ïWuøCǷë¡ąuhÛ¡^KxC`C\\\\bÅxì²ĝÝ¿_NīCȽĿåB¥¢·IŖÕy\\\\¹kxÃ£Č×GDyÃ¤ÁçFQ¡KtŵƋ]CgÏAùSedcÚźuYfyMmhUWpSyGwMPqŀÁ¼zK¶G­Y§Ë@´śÇµƕBm@IogZ¯uTMx}CVKï{éƵP_K«pÛÙqċtkkù]gTğwoɁsMõ³ăAN£MRkmEÊčÛbMjÝGuIZGPģãħE[iµBEuDPÔ~ª¼ęt]ûG§¡QMsğNPŏįzs£Ug{đJĿļā³]ç«Qr~¥CƎÑ^n¶ÆéÎR~Ż¸YI] PumŝrƿIā[xeÇ³L¯v¯s¬ÁY~}ťuŁgƋpÝĄ_ņī¶ÏSR´ÁP~¿Cyċßdwk´SsX|t`Ä ÈðAªìÎT°¦Dda^lĎDĶÚY°`ĪŴǒàŠv\\\\ebZHŖR¬ŢƱùęOÑM­³FÛWp[\"]],\n                \"encodeOffsets\": [[[123806, 39303]], [[123821, 39266]], [[123742, 39256]], [[123702, 39203]], [[123649, 39066]], [[123847, 38933]], [[123580, 38839]], [[123894, 37288]], [[123043, 36624]], [[123344, 38676]], [[123522, 38857]], [[123628, 38858]], [[118260, 36742]]]\n            },\n            \"properties\": {\"cp\": [117.000923, 36.675807], \"name\": \"山东\", \"childNum\": 13}\n        }, {\n            \"id\": \"410000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@ýLùµP³swIÓxcŢĞð´E®ÚPtĴXØxÂ¶@«ŕŕQGYfa[şußǩđš_X³ĳÕčC]kbc¥CS¯ëÍB©÷³­Si_}mYTt³xlàcČzÀD}ÂOQ³ÐTĨ¯ƗòËŖ[hłŦv~}ÂZ«¤lPÇ£ªÝŴÅR§ØnhctâknÏ­ľŹUÓÝdKuķI§oTũÙďkęĆH¸Ó\\\\Ä¿PcnS{wBIvÉĽ[GqµuŇôYgûZca©@½Õǽys¯}lgg@­C\\\\£asIdÍuCQñ[L±ęk·ţb¨©kK»KC²òGKmĨS`UQnk}AGēsqaJ¥ĐGRĎpCuÌy ã iMcplk|tRkðev~^´¦ÜSí¿_iyjI|ȑ|¿_»d}q^{Ƈdă}tqµ`Ƴĕg}V¡om½faÇo³TTj¥tĠRyK{ùÓjuµ{t}uËRivGçJFjµÍyqÎàQÂFewixGw½Yŷpµú³XU½ġyłåkÚwZX·l¢Á¢KzOÎÎjc¼htoDHr|­J½}JZ_¯iPq{tę½ĕ¦Zpĵø«kQĹ¤]MÛfaQpě±ǽ¾]u­Fu÷nčÄ¯ADp}AjmcEÇaª³o³ÆÍSƇĈÙDIzËčľ^KLiÞñ[aA²zzÌ÷D|[íÄ³gfÕÞd®|`Ć~oĠƑô³ŊD×°¯CsøÀ«ìUMhTº¨¸ǡîSÔDruÂÇZÖEvPZW~ØÐtĄE¢¦Ðy¸bô´oŬ¬²Ês~]®tªapŎJ¨Öº_Ŕ`Ŗ^Đ\\\\Ĝu~m²Ƹ¸fWĦrƔ}Î^gjdfÔ¡J}\\\\n C¦þWxªJRÔŠu¬ĨĨmFdM{\\\\d\\\\YÊ¢ú@@¦ª²SÜsC}fNècbpRmlØ^gd¢aÒ¢CZZxvÆ¶N¿¢T@uC¬^ĊðÄn|lGlRjsp¢ED}Fio~ÔN~zkĘHVsǲßjŬŢ`Pûàl¢\\\\ÀEhİgÞē X¼Pk|m\"],\n                \"encodeOffsets\": [[118256, 37017]]\n            },\n            \"properties\": {\"cp\": [113.665412, 34.757975], \"name\": \"河南\", \"childNum\": 1}\n        }, {\n            \"id\": \"420000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@AB\"], [\"@@lskt\"], [\"@@¾«}{ra®pîÃ\\\\{øCËyyB±b\\\\òÝjKL ]ĎĽÌJyÚCƈćÎT´Å´pb©ÈdFin~BCo°BĎÃømv®E^vǾ½Ĝ²RobÜeN^ĺ£R¬lĶ÷YoĖ¥Ě¾|sOr°jY`~I¾®I{GqpCgyl{£ÍÍyPLÂ¡¡¸kWxYlÙæŁĢz¾V´W¶ùŸo¾ZHxjwfxGNÁ³Xéæl¶EièIH ujÌQ~v|sv¶Ôi|ú¢FhQsğ¦SiŠBgÐE^ÁÐ{čnOÂÈUÎóĔÊēĲ}Z³½Mŧïeyp·uk³DsÑ¨L¶_ÅuÃ¨w»¡WqÜ]\\\\Ò§tƗcÕ¸ÕFÏǝĉăxŻČƟOKÉġÿ×wg÷IÅzCg]m«ªGeçÃTC«[t§{loWeC@ps_Bp­rf_``Z|ei¡oċMqow¹DƝÓDYpûsYkıǃ}s¥ç³[§cY§HK«Qy]¢wwö¸ïx¼ņ¾Xv®ÇÀµRĠÐHM±cÏdƒǍũȅȷ±DSyúĝ£ŤĀàtÖÿï[îb\\\\}pĭÉI±Ñy¿³x¯No|¹HÏÛmjúË~TuęjCöAwě¬Rđl¯ Ñb­ŇTĿ_[IčĄʿnM¦ğ\\\\É[T·k¹©oĕ@A¾wya¥Y\\\\¥Âaz¯ãÁ¡k¥ne£ÛwE©Êō¶˓uoj_U¡cF¹­[WvP©whuÕyBF`RqJUw\\\\i¡{jEPïÿ½fćQÑÀQ{°fLÔ~wXgītêÝ¾ĺHd³fJd]HJ²EoU¥HhwQsƐ»Xmg±çve]DmÍPoCc¾_hhøYrŊU¶eD°Č_N~øĹĚ·`z]Äþp¼äÌQv\\\\rCé¾TnkžŐÚÜa¼ÝƆĢ¶ÛodĔňÐ¢JqPb ¾|J¾fXƐîĨ_Z¯À}úƲN_ĒÄ^ĈaŐyp»CÇÄKñL³ġM²wrIÒŭxjb[n«øæà ^²­h¯ÚŐªÞ¸Y²ĒVø}Ā^İ´LÚm¥ÀJÞ{JVųÞŃx×sxxƈē ģMřÚðòIfĊŒ\\\\Ʈ±ŒdÊ§ĘDvČ_Àæ~Dċ´A®µ¨ØLV¦êHÒ¤\"]],\n                \"encodeOffsets\": [[[113712, 34000]], [[115612, 30507]], [[113649, 34054]]]\n            },\n            \"properties\": {\"cp\": [114.298572, 30.584355], \"name\": \"湖北\", \"childNum\": 3}\n        }, {\n            \"id\": \"430000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@nFTs\"], [\"@@ßÅÆá½ÔXrCOËRïÿĩ­TooQyÓ[ŅBE¬ÎÓXaį§Ã¸G °ITxpúxÚĳ¥ÏĢ¾edÄ©ĸGàGhM¤Â_U}Ċ}¢pczfþg¤ÇòAVM\"], [\"@@©KA·³CQ±Á«³BUƑ¹AtćOwD]JiØSm¯b£ylXHËÑ±H«C^õľAÅ§¤É¥ïyuǙuA¢^{ÌC´­¦ŷJ£^[ª¿ĕ~ƇN skóā¹¿ï]ă~÷O§­@Vm¡Qđ¦¢Ĥ{ºjÔª¥nf´~Õo×ÛąMąıuZmZcÒ ĲĪ²SÊǄŶ¨ƚCÖŎªQØ¼rŭ­«}NÏürÊ¬mjr@ĘrTW ­SsdHzƓ^ÇÂyUi¯DÅYlŹu{hT}mĉ¹¥ěDÿë©ıÓ[Oº£¥ótł¹MÕƪ`PDiÛU¾ÅâìUñBÈ£ýhedy¡oċ`pfmjP~kZaZsÐd°wj§@Ĵ®w~^kÀÅKvNmX\\\\¨aŃqvíó¿F¤¡@ũÑVw}S@j}¾«pĂrªg àÀ²NJ¶¶DôK|^ª°LX¾ŴäPĪ±£EXd^¶ĲÞÜ~u¸ǔMRhsRe`ÄofIÔ\\\\Ø  ićymnú¨cj ¢»GČìƊÿÐ¨XeĈĀ¾Oð Fi ¢|[jVxrIQ_EzAN¦zLU`cªxOTu RLÄ¢dVi`p˔vŎµªÉF~Ød¢ºgİàw¸Áb[¦Zb¦z½xBĖ@ªpºlS¸Ö\\\\Ĕ[N¥ˀmĎăJ\\\\ŀ`ňSÚĖÁĐiOĜ«BxDõĚivSÌ}iùÜnÐºG{p°M´wÀÒzJ²ò¨ oTçüöoÛÿñőĞ¤ùTz²CȆȸǎŪƑÐc°dPÎğË¶[È½u¯½WM¡­ÉB·rínZÒ `¨GA¾\\\\pēXhÃRC­üWGġuTé§ŎÑ©ò³I±³}_EÃħg®ęisÁPDmÅ{b[RÅs·kPŽƥóRoOV~]{g\\\\êYƪ¦kÝbiċƵGZ»Ěõó·³vŝ£ø@pyö_ëIkÑµbcÑ§y×dYØªiþ¨[]f]Ņ©C}ÁN»hĻħƏĩ\"]],\n                \"encodeOffsets\": [[[115640, 30489]], [[112543, 27312]], [[116690, 26230]]]\n            },\n            \"properties\": {\"cp\": [112.982279, 28.19409], \"name\": \"湖南\", \"childNum\": 3}\n        }, {\n            \"id\": \"440000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@QdAua\"], [\"@@lxDLo\"], [\"@@sbhNLo\"], [\"@@Ă ā\"], [\"@@WltO[[\"], [\"@@Kr]S\"], [\"@@eI]y\"], [\"@@I|Mym\"], [\"@@Û³LS¼Y\"], [\"@@nvºBëui©`¾\"], [\"@@zdÛJw®\"], [\"@@°¯\"], [\"@@a yAª¸ËJIxØ@ĀHAmÃV¡ofuo\"], [\"@@sŗÃÔėAƁZÄ ~°ČPäh\"], [\"@@¶ÝÌvmĞh­ıQ\"], [\"@@HdSjĒ¢D}waru«ZqadYM\"], [\"@@el\\\\LqqU\"], [\"@@~rMo\\\\\"], [\"@@f^C\"], [\"@@øPªoj÷ÍÝħXČx°Q¨ıXNv\"], [\"@@gÇƳo[~tly\"], [\"@@EÆC¿\"], [\"@@OP\"], [\"@@wđógĝ[³¡VÙæÅöMÌ³¹pÁaËýý©D©ÜJŹƕģGą¤{ÙūÇO²«BƱéAÒĥ¡«BhlmtÃPµyU¯ucd·w_bŝcīímGO|KPȏŹãŝIŕŭŕ@Óoo¿ē±ß}ŭĲWÈCőâUâǙIğŉ©IĳE×Á³AówXJþ±ÌÜÓĨ£L]ĈÙƺZǾĆĖMĸĤfÎĵlŨnÈĐtFFĤêk¶^k°f¶g}®Faf`vXŲxl¦ÔÁ²¬Ð¦pqÊÌ²iXØRDÎ}Ä@ZĠsx®AR~®ETtĄZƈfŠŠHâÒÐAµ\\\\S¸^wĖkRzalŜ|E¨ÈNĀňZTpBh£\\\\ĎƀuXĖtKL¶G|»ĺEļĞ~ÜĢÛĊrOÙîvd]n¬VÊĜ°RÖpMƂªFbwEÀ©\\\\¤]ŸI®¥D³|Ë]CöAŤ¦æ´¥¸Lv¼¢ĽBaôF~®²GÌÒEYzk¤°ahlVÕI^CxĈPsBƒºV¸@¾ªR²ĨN]´_eavSivc}p}Đ¼ƌkJÚe th_¸ ºx±ò_xNË²@ă¡ßH©Ùñ}wkNÕ¹ÇO½¿£ĕ]ly_WìIÇª`uTÅxYĒÖ¼kÖµMjJÚwn\\\\hĒv]îh|ÈƄøèg¸Ķß ĉĈWb¹ƀdéĘNTtP[öSvrCZaGubo´ŖÒÇĐ~¡zCIözx¢PnÈñ @ĥÒ¦]ƞV}³ăĔñiiÄÓVépKG½ÄÓávYoC·sitiaÀyŧÎ¡ÈYDÑům}ý|m[węõĉZÅxUO}÷N¹³ĉo_qtăqwµŁYÙǝŕ¹tïÛUÃ¯mRCºĭ|µÕÊK½Rē ó]GªęAx»HO£|ām¡diď×YïYWªŉOeÚtĐ«zđ¹TāúEá²\\\\ķÍ}jYàÙÆſ¿Çdğ·ùTßÇţʄ¡XgWÀǇğ·¿ÃOj YÇ÷Qěi\"]],\n                \"encodeOffsets\": [[[117381, 22988]], [[116552, 22934]], [[116790, 22617]], [[116973, 22545]], [[116444, 22536]], [[116931, 22515]], [[116496, 22490]], [[116453, 22449]], [[113301, 21439]], [[118726, 21604]], [[118709, 21486]], [[113210, 20816]], [[115482, 22082]], [[113171, 21585]], [[113199, 21590]], [[115232, 22102]], [[115739, 22373]], [[115134, 22184]], [[113056, 21175]], [[119573, 21271]], [[119957, 24020]], [[115859, 22356]], [[116561, 22649]], [[116285, 22746]]]\n            },\n            \"properties\": {\"cp\": [113.280637, 23.125178], \"name\": \"广东\", \"childNum\": 24}\n        }, {\n            \"id\": \"450000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@H TQ§A\"], [\"@@ĨÊªLƊDÎĹĐCǦė¸zÚGn£¾rªŀÜt¬@ÖÚSx~øOŒŶÐÂæȠ\\\\ÈÜObĖw^oÞLf¬°bI lTØBÌF£Ć¹gñĤaYt¿¤VSñK¸¤nM¼JE±½¸ñoÜCƆæĪ^ĚQÖ¦^f´QüÜÊz¯lzUĺš@ìp¶n]sxtx¶@~ÒĂJb©gk{°~c°`Ô¬rV\\\\la¼¤ôá`¯¹LCÆbxEræOv[H­[~|aB£ÖsºdAĐzNÂðsÞÆĤªbab`ho¡³F«èVlo¤ÔRzpp®SĪº¨ÖºNĳd`a¦¤F³ºDÎńĀìCĜº¦Ċ~nS|gźvZkCÆj°zVÈÁƔ]LÊFZgčP­kini«qÇczÍY®¬Ů»qR×ō©DÕ§ƙǃŵTÉĩ±ıdÑnYYĲvNĆĆØÜ Öp}e³¦m©iÓ|¹ħņ|ª¦QF¢Â¬ʖovg¿em^ucà÷gÕuíÙćĝ}FĻ¼Ĺ{µHKsLSđƃrč¤[AgoSŇYMÿ§Ç{FśbkylQxĕ]T·¶[BÑÏGáşşƇeăYSs­FQ}­BwtYğÃ@~CÍQ ×WjË±rÉ¥oÏ ±«ÓÂ¥kwWűmcih³K~µh¯e]lµélEģEďsmÇŧē`ãògK_ÛsUʝćğ¶höO¤Ǜn³c`¡y¦CezYwa[ďĵűMę§]XÎ_íÛ]éÛUćİÕBƣ±dy¹T^dûÅÑŦ·PĻþÙ`K¦¢ÍeĥR¿³£[~äu¼dltW¸oRM¢ď\\\\z}Æzdvň{ÎXF¶°Â_ÒÂÏL©ÖTmu¼ãlīkiqéfA·Êµ\\\\őDc¥ÝFyÔćcűH_hLÜêĺĐ¨c}rn`½Ì@¸¶ªVLhŒ\\\\Ţĺk~Ġið°|gtTĭĸ^xvKVGréAébUuMJVÃO¡qĂXËSģãlýà_juYÛÒBG^éÖ¶§EGÅzěƯ¤EkN[kdåucé¬dnYpAyČ{`]þ¯TbÜÈk¡ĠvàhÂƄ¢Jî¶²\"]],\n                \"encodeOffsets\": [[[111707, 21520]], [[107619, 25527]]]\n            },\n            \"properties\": {\"cp\": [108.320004, 22.82402], \"name\": \"广西\", \"childNum\": 2}\n        }, {\n            \"id\": \"460000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@¦Ŝil¢XƦƞòïè§ŞCêɕrŧůÇąĻõ·ĉ³œ̅kÇm@ċȧŧĥĽʉ­ƅſȓÒË¦ŝE}ºƑ[ÍĜȋ gÎfǐÏĤ¨êƺ\\\\Ɔ¸ĠĎvʄȀÐ¾jNðĀÒRZǆzÐŘÎ°H¨Ƣb²_Ġ \"],\n                \"encodeOffsets\": [[112750, 20508]]\n            },\n            \"properties\": {\"cp\": [110.33119, 20.031971], \"name\": \"海南\", \"childNum\": 1}\n        }, {\n            \"id\": \"510000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@LqKr\"], [\"@@[ĻéV£_ţġñpG réÏ·~ąSfy×Í·ºſƽiÍıƣıĻmHH}siaX@iÇ°ÁÃ×t«­T¤JJJyJÈ`Ohß¦¡uËhIyCjmÿwZGTiSsOB²fNmsPa{M{õE^Hj}gYpaeu¯oáwHjÁ½M¡pMuåmni{fk\\\\oÎqCwEZ¼KĝAy{m÷LwO×SimRI¯rKõBS«sFe]fµ¢óY_ÆPRcue°Cbo×bd£ŌIHgtrnyPt¦foaXďxlBowz_{ÊéWiêEGhÜ¸ºuFĈIxf®Y½ĀǙ]¤EyF²ċw¸¿@g¢§RGv»áW`ÃĵJwi]t¥wO­½a[×]`Ãi­üL¦LabbTÀåc}ÍhÆh®BHî|îºÉk­¤Sy£ia©taį·Ɖ`ō¥UhOĝLk}©Fos´JmµlŁuønÑJWÎªYÀïAetTŅÓGË«bo{ıwodƟ½OġÜÂµxàNÖ¾P²§HKv¾]|BÆåoZ`¡Ø`ÀmºĠ~ÌÐ§nÇ¿¤]wğ@srğu~Io[é±¹ ¿ſđÓ@qg¹zƱřaí°KtÇ¤V»Ã[ĩǭƑ^ÇÓ@áťsZÏÅĭƋěpwDóÖáŻneQËq·GCœýS]x·ýq³OÕ¶Qzßti{řáÍÇWŝŭñzÇWpç¿JXĩè½cFÂLiVjx}\\\\NŇĖ¥GeJA¼ÄHfÈu~¸Æ«dE³ÉMA|bÒćhG¬CMõƤąAvüVéŀ_VÌ³ĐwQj´·ZeÈÁ¨X´Æ¡Qu·»ÕZ³ġqDoy`L¬gdp°şp¦ėìÅĮZ°Iähzĵf²å ĚÑKpIN|Ñz]ń·FU×é»R³MÉ»GM«kiér}Ã`¹ăÞmÈnÁîRǀ³ĜoİzŔwǶVÚ£À]ɜ»ĆlƂ²ĠþTº·àUȞÏʦ¶I«dĽĢdĬ¿»Ĕ×h\\\\c¬ä²GêëĤł¥ÀǿżÃÆMº}BÕĢyFVvwxBèĻĒ©ĈtCĢɽŠȣ¦āæ·HĽîôNÔ~^¤Ɗu^s¼{TA¼ø°¢İªDè¾Ň¶ÝJ®Z´ğ~Sn|ªWÚ©òzPOȸbð¢|øĞŒQìÛÐ@ĞǎRS¤Á§di´ezÝúØã]HqkIþËQÇ¦ÃsÇ¤[E¬ÉŪÍxXƒ·ÖƁİlƞ¹ª¹|XÊwnÆƄmÀêErĒtD®ċæcQE®³^ĭ¥©l}äQtoŖÜqÆkµªÔĻĴ¡@Ċ°B²Èw^^RsºTĀ£ŚæQPJvÄz^Đ¹Æ¯fLà´GC²dt­ĀRt¼¤ĦOðğfÔðDŨŁĞƘïPÈ®âbMüÀXZ ¸£@Å»»QÉ­]dsÖ×_Í_ÌêŮPrĔĐÕGĂeZÜîĘqBhtO ¤tE[h|YÔZśÎs´xº±Uñt|OĩĠºNbgþJy^dÂY Į]Řz¦gC³R`Āz¢Aj¸CL¤RÆ»@­Ŏk\\\\Ç´£YW}z@Z}Ã¶oû¶]´^NÒ}èNªPÍy¹`S°´ATeVamdUĐwʄvĮÕ\\\\uÆŗ¨Yp¹àZÂmWh{á}WØǍÉüwga§áCNęÎ[ĀÕĪgÖÉªXøx¬½Ů¦¦[NÎLÜUÖ´òrÙŠxR^JkĳnDX{U~ET{ļº¦PZcjF²Ė@pg¨B{u¨ŦyhoÚD®¯¢ WòàFÎ¤¨GDäz¦kŮPġqË¥À]eâÚ´ªKxīPÖ|æ[xÃ¤JÞĥsNÖ½I¬nĨY´®ÐƐmDŝuäđđEbee_v¡}ìęǊē}qÉåT¯µRs¡M@}ůaa­¯wvƉåZw\\\\Z{åû^\"]],\n                \"encodeOffsets\": [[[108815, 30935]], [[110617, 31811]]]\n            },\n            \"properties\": {\"cp\": [104.065735, 30.659462], \"name\": \"四川\", \"childNum\": 2}\n        }, {\n            \"id\": \"520000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@G\\\\lY£in\"], [\"@@q|mc¯tÏVSÎ\"], [\"@@hÑ£IsNgßHHªķÃh_¹¡ĝÄ§ń¦uÙùgS¯JH|sÝÅtÁïyMDč»eÕtA¤{b\\\\}G®u\\\\åPFqwÅaDK°ºâ_£ùbµmÁÛĹM[q|hlaªāI}Ñµ@swtwm^oµDéĽŠyVky°ÉûÛR³e¥]RÕěħ[ƅåÛDpJiVÂF²I»mN·£LbÒYbWsÀbpkiTZĄă¶Hq`ĥ_J¯ae«KpÝx]aĕÛPÇȟ[ÁåŵÏő÷Pw}TÙ@Õs«ĿÛq©½m¤ÙH·yǥĘĉBµĨÕnđ]K©œáGçş§ÕßgǗĦTèƤƺ{¶ÉHÎd¾ŚÊ·OÐjXWrãLyzÉAL¾ę¢bĶėy_qMĔąro¼hĊw¶øV¤w²Ĉ]ÊKx|`ź¦ÂÈdrcÈbe¸`I¼čTF´¼Óýȃr¹ÍJ©k_șl³´_pĐ`oÒh¶pa^ÓĔ}D»^Xy`d[KvJPhèhCrĂĚÂ^Êƌ wZL­Ġ£ÁbrzOIlMMĪŐžËr×ÎeŦtw|¢mKjSǘňĂStÎŦEtqFT¾Eì¬¬ôxÌO¢ K³ŀºäYPVgŎ¦ŊmŞ¼VZwVlz¤£Tl®ctĽÚó{G­AÇge~Îd¿æaSba¥KKûj®_Ä^\\\\Ø¾bP®¦x^sxjĶI_Ä Xâ¼Hu¨Qh¡À@Ëô}±GNìĎlT¸`V~R°tbÕĊ`¸úÛtÏFDu[MfqGH·¥yAztMFe|R_GkChZeÚ°tov`xbDnÐ{E}ZèxNEÞREn[Pv@{~rĆAB§EO¿|UZ~ìUf¨J²ĂÝÆsªB`s¶fvö¦Õ~dÔq¨¸º»uù[[§´sb¤¢zþF¢ÆÀhÂW\\\\ıËIÝo±ĭŠ£þÊs}¡R]ěDg´VG¢j±®èºÃmpU[Áëº°rÜbNu¸}º¼`niºÔXĄ¤¼ÔdaµÁ_ÃftQQgR·Ǔv}Ý×ĵ]µWc¤F²OĩųãW½¯K©]{LóµCIµ±Mß¿h©āq¬o½~@i~TUxŪÒ¢@£ÀEîôruńb[§nWuMÆLl¿]x}ĳ­½\"]],\n                \"encodeOffsets\": [[[112158, 27383]], [[112105, 27474]], [[112095, 27476]]]\n            },\n            \"properties\": {\"cp\": [106.713478, 26.578343], \"name\": \"贵州\", \"childNum\": 3}\n        }, {\n            \"id\": \"530000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@[ùx½}ÑRHYīĺûsÍniEoã½Ya²ė{c¬ĝgĂsAØÅwďõzFjw}«Dx¿}Uũlê@HÅ­F¨ÇoJ´Ónũuą¡Ã¢pÒÅØ TF²xa²ËXcÊlHîAßËŁkŻƑŷÉ©hW­æßUËs¡¦}teèÆ¶StÇÇ}Fd£jĈZĆÆ¤Tč\\\\D}O÷£U§~ŃGåŃDĝ¸Tsd¶¶Bª¤u¢ŌĎo~t¾ÍŶÒtD¦ÚiôözØX²ghįh½Û±¯ÿm·zR¦Ɵ`ªŊÃh¢rOÔ´£Ym¼èêf¯ŪĽncÚbw\\\\zlvWªâ ¦gmĿBĹ£¢ƹřbĥkǫßeeZkÙIKueT»sVesbaĕ  ¶®dNĄÄpªy¼³BE®lGŭCǶwêżĔÂepÍÀQƞpC¼ŲÈ­AÎô¶RäQ^Øu¬°_Èôc´¹ò¨PÎ¢hlĎ¦´ĦÆ´sâÇŲPnÊD^¯°Upv}®BPÌªjǬxSöwlfòªvqĸ|`H­viļndĜ­Ćhňem·FyÞqóSį¯³X_ĞçêtryvL¤§z¦c¦¥jnŞklD¤øz½ĜàĂŧMÅ|áƆàÊcðÂFÜáŢ¥\\\\\\\\ºİøÒÐJĴîD¦zK²ǏÎEh~CD­hMn^ÌöÄ©ČZÀaüfɭyœpį´ěFűk]Ôě¢qlÅĆÙa¶~ÄqêljN¬¼HÊNQ´ê¼VØ¸E^ŃÒyM{JLoÒęæe±Ķygã¯JYÆĭĘëo¥Šo¯hcK«z_prC´ĢÖY¼ v¸¢RÅW³Â§fÇ¸Yi³xR´ďUË`êĿUûuĆBƣöNDH«ĈgÑaB{ÊNF´¬c·Åv}eÇÃGB»If¦HňĕM~[iwjUÁKE¾dĪçWIèÀoÈXòyŞŮÈXâÎŚj|àsRyµÖPr´þ ¸^wþTDŔHr¸RÌmfżÕâCôoxĜƌÆĮÐYtâŦÔ@]ÈǮƒ\\\\Ī¼Ä£UsÈ¯LbîƲŚºyhr@ĒÔƀÀ²º\\\\êpJ}ĠvqtĠ@^xÀ£È¨mËÏğ}n¹_¿¢×Y_æpÅA^{½Lu¨GO±Õ½ßM¶wÁĢÛPƢ¼pcĲx|apÌ¬HÐŊSfsðBZ¿©XÏÒKk÷Eû¿SrEFsÕūkóVǥŉiTL¡n{uxţÏhôŝ¬ğōNNJkyPaqÂğ¤K®YxÉƋÁ]āęDqçgOgILu\\\\_gz]W¼~CÔē]bµogpÑ_oď`´³Țkl`IªºÎȄqÔþ»E³ĎSJ»_f·adÇqÇc¥Á_Źw{L^É±ćxU£µ÷xgĉp»ĆqNē`rĘzaĵĚ¡K½ÊBzyäKXqiWPÏÉ¸½řÍcÊG|µƕƣGË÷k°_^ý|_zċBZocmø¯hhcæ\\\\lMFlư£ĜÆyHF¨µêÕ]HAàÓ^it `þßäkĤÎT~Wlÿ¨ÔPzUCNVv [jâôDôď[}z¿msSh¯{jïğl}šĹ[őgK©U·µË@¾m_~q¡f¹ÅË^»f³ø}Q¡ÖË³gÍ±^Ç\\\\ëÃA_¿bWÏ[¶ƛé£F{īZgm@|kHǭƁć¦UĔť×ë}ǝeďºȡȘÏíBÉ£āĘPªĳ¶ŉÿy©nď£G¹¡I±LÉĺÑdĉÜW¥}gÁ{aqÃ¥aıęÏZï`\"],\n                \"encodeOffsets\": [[104636, 22969]]\n            },\n            \"properties\": {\"cp\": [102.712251, 25.040609], \"name\": \"云南\", \"childNum\": 1}\n        }, {\n            \"id\": \"540000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@ÂhľxŖxÒVºÅâAĪÝȆµę¯Ňa±r_w~uSÕňqOj]ɄQ£ZUDûoY»©M[L¼qãË{VÍçWVi]ë©Ä÷àyƛhÚU°adcQ~Mx¥cc¡ÙaSyFÖk­uRýq¿ÔµQĽ³aG{¿FµëªéĜÿª@¬·K·àariĕĀ«V»ŶĴūgèLǴŇƶaftèBŚ£^âǐÝ®M¦ÁǞÿ¬LhJ¾óƾÆºcxwf]Y´¦|QLn°adĊ\\\\¨oǀÍŎ´ĩĀd`tÊQŞŕ|¨C^©Ĉ¦¦ÎJĊ{ëĎjª²rÐl`¼Ą[t|¦Stè¾PÜK¸dƄı]s¤î_v¹ÎVòŦj£Əsc¬_Ğ´|Ł¦Av¦w`ăaÝaa­¢e¤ı²©ªSªÈMĄwÉØŔì@T¤Ę\\\\õª@þo´­xA sÂtŎKzó´ÇĊµ¢r^nĊ­Æ¬×üG¢³ {âĊ]G~bÀgVjzlhǶfOfdªB]pjTOtĊn¤}®¦Č¥d¢¼»ddY¼t¢eȤJ¤}Ǿ¡°§¤AÐlc@ĝsªćļđAçwxUuzEÖġ~AN¹ÄÅȀŻ¦¿ģŁéì±Hãd«g[Ø¼ēÀcīľġ¬cJµÐʥVȝ¸ßS¹ý±ğkƁ¼ą^ɛ¤Ûÿb[}¬ōõÃ]ËNm®g@Bg}ÍF±ǐyL¥íCIĳÏ÷Ñį[¹¦[âšEÛïÁÉdƅß{âNÆāŨß¾ě÷yC£k­´ÓH@Â¹TZ¥¢į·ÌAÐ§®Zcv½Z­¹|ÅWZqgW|ieZÅYVÓqdqbc²R@c¥Rã»GeeƃīQ}J[ÒK¬Ə|oėjġĠÑN¡ð¯EBčnwôɍėª²CλŹġǝʅįĭạ̃ūȹ]ΓͧgšsgȽóϧµǛęgſ¶ҍć`ĘąŌJÞä¤rÅň¥ÖÁUětęuůÞiĊÄÀ\\\\Æs¦ÓRb|Â^řÌkÄŷ¶½÷f±iMÝ@ĥ°G¬ÃM¥n£Øąğ¯ß§aëbéüÑOčk£{\\\\eµª×MÉfm«Ƒ{Å×Gŏǩãy³©WÑăû··Qòı}¯ãIéÕÂZ¨īès¶ZÈsæĔTŘvgÌsN@îá¾ó@ÙwU±ÉTå»£TđWxq¹Zobs[×¯cĩvėŧ³BM|¹kªħ¥TzNYnÝßpęrñĠĉRS~½ěVVµõ«M££µBĉ¥áºae~³AuĐh`Ü³ç@BÛïĿa©|z²Ý¼D£àč²ŸIûI āóK¥}rÝ_Á´éMaň¨~ªSĈ½½KÙóĿeƃÆB·¬ën×W|Uº}LJrƳlŒµ`bÔ`QÐÓ@s¬ñIÍ@ûws¡åQÑßÁ`ŋĴ{ĪTÚÅTSÄ³Yo|Ç[Ç¾µMW¢ĭiÕØ¿@MhpÕ]jéò¿OƇĆƇpêĉâlØwěsǩĵ¸cbU¹ř¨WavquSMzeo_^gsÏ·¥Ó@~¯¿RiīB\\\\qTGªÇĜçPoÿfñòą¦óQīÈáPābß{ZŗĸIæÅhnszÁCËìñÏ·ąĚÝUm®ó­L·ăUÈíoù´Êj°ŁŤ_uµ^°ìÇ@tĶĒ¡ÆM³Ģ«İĨÅ®ğRāðggheÆ¢zÊ©Ô\\\\°ÝĎz~ź¤PnMĪÖB£kné§żćĆKĒ°¼L¶èâz¨u¦¥LDĘz¬ýÎmĘd¾ßFzhg²Fy¦ĝ¤ċņbÎ@yĄæm°NĮZRÖíJ²öLĸÒ¨Y®ƌÐVàtt_ÚÂyĠz]ŢhzĎ{ÂĢXc|ÐqfO¢¤ögÌHNPKŖUú´xx[xvĐCûĀìÖT¬¸^}Ìsòd´_KgžLĴÀBon|H@Êx¦BpŰŌ¿fµƌA¾zǈRx¶FkĄźRzŀ~¶[´HnªVƞuĒ­È¨ƎcƽÌm¸ÁÈM¦x͊ëÀxǆBú^´W£dkɾĬpw˂ØɦļĬIŚÊnŔa¸~J°îlɌxĤÊÈðhÌ®gT´øàCÀ^ªerrƘd¢İP|Ė ŸWªĦ^¶´ÂLaT±üWƜǀRÂŶUńĖ[QhlLüAÜ\\\\qRĄ©\"],\n                \"encodeOffsets\": [[90849, 37210]]\n            },\n            \"properties\": {\"cp\": [91.132212, 29.660361], \"name\": \"西藏\", \"childNum\": 1}\n        }, {\n            \"id\": \"610000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@p¢ȮµûGĦ}Ħðǚ¶òƄjɂz°{ºØkÈęâ¦jªBg\\\\ċ°s¬]jú EȌǆ¬stRÆdĠİwÜ¸ôW¾ƮłÒ_{Ìû¼jº¹¢GǪÒ¯ĘZ`ºŊecņą~BÂgzpâēòYǠȰÌTÎ¨ÂW|fcă§uF@N¢XLRMº[ğȣſï|¥Jkc`sŉǷY¹W@µ÷Kãï³ÛIcñ·VȋÚÒķø©þ¥yÓğęmWµÎumZyOŅƟĥÓ~sÑL¤µaÅY¦ocyZ{y c]{Ta©`U_Ěē£ωÊƍKùK¶ȱÝƷ§{û»ÅÁȹÍéuĳ|¹cÑdìUYOuFÕÈYvÁCqÓTǢí§·S¹NgV¬ë÷Át°DØ¯C´ŉƒópģ}ċcEËFéGU¥×K§­¶³BČ}C¿åċ`wġB·¤őcƭ²ő[Å^axwQOÿEËßŚĤNĔwƇÄńwĪ­o[_KÓª³ÙnKÇěÿ]ďă_d©·©Ýŏ°Ù®g]±ßå¬÷m\\\\iaǑkěX{¢|ZKlçhLtŇîŵœè[É@ƉĄEtƇÏ³­ħZ«mJ×¾MtÝĦ£IwÄå\\\\Õ{OwĬ©LÙ³ÙgBƕŀrÌĢŭO¥lãyC§HÍ£ßEñX¡­°ÙCgpťzb`wIvA|§hoĕ@E±iYd¥OĻ¹S|}F@¾oAO²{tfÜ¢FǂÒW²°BĤh^Wx{@¬­F¸¡ķn£P|ªĴ@^ĠĈæbÔc¶lYi^MicĎ°Â[ävï¶gv@ÀĬ·lJ¸sn|¼u~a]ÆÈtŌºJpþ£KKf~¦UbyäIĺãnÔ¿^­ŵMThĠÜ¤ko¼Ŏìąǜh`[tRd²Ĳ_XPrɲlXiL§à¹H°Ȧqº®QCbAŌJ¸ĕÚ³ĺ§ `d¨YjiZvRĺ±öVKkjGȊÄePĞZmļKÀ[`ösìhïÎoĬdtKÞ{¬èÒÒBÔpĲÇĬJŊ¦±J«Y§@·pHµàåVKepWftsAÅqC·¬ko«pHÆuK@oHĆÛķhxenS³àǍrqƶRbzy¸ËÐl¼EºpĤ¼x¼½~Ğà@ÚüdK^mÌSj\"],\n                \"encodeOffsets\": [[110234, 38774]]\n            },\n            \"properties\": {\"cp\": [108.948024, 34.263161], \"name\": \"陕西\", \"childNum\": 1}\n        }, {\n            \"id\": \"620000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@VuUv\"], [\"@@ũEĠtt~nkh`Q¦ÅÄÜdwAb×ĠąJ¤DüègĺqBqj°lI¡ĨÒ¤úSHbjÎB°aZ¢KJO[|A£Dx}NĂ¬HUnrk kp¼Y kMJn[aGáÚÏ[½rc}aQxOgsPMnUsncZsKúvAtÞġ£®ĀYKdnFw¢JE°Latf`¼h¬we|Æbj}GA·~W`¢MC¤tL©Ĳ°qdfObÞĬ¹ttu`^ZúE`[@Æsîz®¡CƳƜG²R¢RmfwĸgÜą G@pzJM½mhVy¸uÈÔO±¨{LfæU¶ßGĂq\\\\ª¬²I¥IŉÈīoıÓÑAçÑ|«LÝcspīðÍgtë_õ\\\\ĉñLYnĝgRǡÁiHLlõUĹ²uQjYi§Z_c¨´ĹĖÙ·ŋIaBD­R¹ȥr¯GºßK¨jWkɱOqWĳ\\\\a­Q\\\\sg_ĆǛōëp»£lğÛgSŶN®À]ÓämĹãJaz¥V}Le¤Lýo¹IsŋÅÇ^bz³tmEÁ´a¹cčecÇNĊãÁ\\\\č¯dNj]jZµkÓdaćå]ğĳ@ ©O{¤ĸm¢E·®«|@Xwg]Aģ±¯XǁÑǳªcwQÚŝñsÕ³ÛV_ý¥\\\\ů¥©¾÷w©WÕÊĩhÿÖÁRo¸V¬âDb¨hûxÊ×ǌ~Zâg|XÁnßYoº§ZÅŘv[ĭÖʃuďxcVbnUSfB¯³_TzºÎO©çMÑ~M³]µ^püµÄY~y@X~¤Z³[Èōl@®Å¼£QK·Di¡ByÿQ_´D¥hŗy^ĭÁZ]cIzýah¹MĪğPs{ò²Vw¹t³ŜË[Ñ}X\\\\gsF£sPAgěp×ëfYHāďÖqēŭOÏëdLü\\\\it^c®RÊº¶¢H°mrY£B¹čIoľu¶uI]vģSQ{UŻÅ}QÂ|Ì°ƅ¤ĩŪU ęĄÌZÒ\\\\v²PĔ»ƢNHĂyAmƂwVm`]ÈbH`Ì¢²ILvĜH®¤Dlt_¢JJÄämèÔDëþgºƫaʎÌrêYi~ Îİ¤NpÀA¾Ĕ¼bð÷®üszMzÖĖQdȨýv§Tè|ªHÃ¾a¸|Ð ƒwKĢx¦ivr^ÿ ¸l öæfƟĴ·PJv}n\\\\h¹¶v·À|\\\\ƁĚN´ĜçèÁz]ġ¤²¨QÒŨTIlªťØ}¼˗ƦvÄùØEÂ«FïËIqōTvāÜŏíÛßÛVj³âwGăÂíNOPìyV³ŉĖýZso§HÑiYw[ß\\\\X¦¥c]ÔƩÜ·«jÐqvÁ¦m^ċ±R¦΋ƈťĚgÀ»IïĨʗƮ°ƝĻþÍAƉſ±tÍEÕÞāNUÍ¡\\\\ſčåÒʻĘm ƭÌŹöʥëQ¤µ­ÇcƕªoIýIÉ_mkl³ăƓ¦j¡YzŇi}Msßõīʋ }ÁVm_[n}eı­Uĥ¼ªI{Î§DÓƻėojqYhĹT©oūĶ£]ďxĩǑMĝq`B´ƃ˺Чç~²ņj@¥@đ´ί}ĥtPńÇ¾V¬ufÓÉCtÓ̻¹£G³]ƖƾŎĪŪĘ̖¨ʈĢƂlɘ۪üºňUðǜȢƢż̌ȦǼĤŊɲĖÂ­Kq´ï¦ºĒǲņɾªǀÞĈĂD½ĄĎÌŗĞrôñnN¼â¾ʄľԆ|Ǆ֦ज़ȗǉ̘̭ɺƅêgV̍ʆĠ·ÌĊv|ýĖÕWĊǎÞ´õ¼cÒÒBĢ͢UĜð͒s¨ňƃLĉÕÝ@ɛƯ÷¿Ľ­ĹeȏĳëCȚDŲyê×Ŗyò¯ļcÂßYtÁƤyAã˾J@ǝrý@¤rz¸oP¹ɐÚyáHĀ[JwcVeȴÏ»ÈĖ}ƒŰŐèȭǢόĀƪÈŶë;Ñ̆ȤМľĮEŔĹŊũ~ËUă{ĻƹɁύȩþĽvĽƓÉ@ēĽɲßǐƫʾǗĒpäWÐxnsÀ^ƆwW©¦cÅ¡Ji§vúF¶¨c~c¼īeXǚ\\\\đ¾JwÀďksãAfÕ¦L}waoZD½Ml«]eÒÅaÉ²áo½FõÛ]ĻÒ¡wYR£¢rvÓ®y®LFLzĈôe]gx}|KK}xklL]c¦£fRtív¦PĤoH{tK\"]],\n                \"encodeOffsets\": [[[108619, 36299]], [[108589, 36341]]]\n            },\n            \"properties\": {\"cp\": [103.823557, 36.058039], \"name\": \"甘肃\", \"childNum\": 2}\n        }, {\n            \"id\": \"630000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@InJm\"], [\"@@CÆ½OŃĦsΰ~Ē³¦@@Ņi±è}ШƄ˹A³r_ĞǒNĪĐw¤^ŬĵªpĺSZgrpiƼĘÔ¨C|ÍJ©Ħ»®VĲ~f\\\\m `UnÂ~ʌĬàöNt~ňjy¢ZiƔ¥Ąk´nl`JÊJþ©pdƖ®È£¶ìRʦźõƮËnʼėæÑƀĎ[¢VÎĂMÖÝÎF²sƊƀÎBļýƞ¯ʘƭðħ¼Jh¿ŦęΌƇ¥²Q]Č¥nuÂÏri¸¬ƪÛ^Ó¦d¥[Wàx\\\\ZjÒ¨GtpþYŊĕ´zUOëPîMĄÁxH´áiÜUàîÜŐĂÛSuŎrJðÌ¬EFÁú×uÃÎkrĒ{V}İ«O_ÌËĬ©ÓŧSRÑ±§Ģ£^ÂyèçěM³Ƃę{[¸¿uºµ[gt£¸OƤĿéYõ·kĀq]juw¥DĩƍõÇPéÄ½G©ã¤GuȧþRcÕĕNyyût­øï»a½ē¿BMoį£Íj}éZËqbʍƬh¹ìÿÓAçãnIÃ¡I`ks£CG­ěUy×Cy@¶ʡÊBnāzGơMē¼±O÷õJËĚăVĪũƆ£¯{ËL½ÌzżVR|ĠTbuvJvµhĻĖHAëáa­OÇðñęNwœľ·LmI±íĠĩPÉ×®ÿscB³±JKßĊ«`ađ»·QAmOVţéÿ¤¹SQt]]Çx±¯A@ĉĳ¢Óļ©l¶ÅÛrŕspãRk~¦ª]Į­´FRåd­ČsCqđéFn¿ÅƃmÉx{W©ºƝºįkÕƂƑ¸wWūÐ©ÈF£\\\\tÈ¥ÄRÈýÌJ lGr^×äùyÞ³fjc¨£ÂZ|ǓMĝÏ@ëÜőRĝ÷¡{aïȷPu°ËXÙ{©TmĠ}Y³­ÞIňµç½©C¡į÷¯B»|St»]vųs»}MÓ ÿʪƟǭA¡fs»PY¼c¡»¦cċ­¥£~msĉPSi^o©AecPeǵkgyUi¿h}aHĉ^|á´¡HØûÅ«ĉ®]m¡qĉ¶³ÈyôōLÁstB®wn±ă¥HSòė£Së@×œÊăxÇN©©T±ª£Ĳ¡fb®Þbb_Ą¥xu¥B{łĝ³«`dƐt¤ťiñÍUuºí`£^tƃĲc·ÛLO½sç¥Ts{ă\\\\_»kÏ±q©čiìĉ|ÍI¥ć¥]ª§D{ŝŖÉR_sÿc³ĪōƿÎ§p[ĉc¯bKmR¥{³Ze^wx¹dƽÅ½ôIg §Mĕ ƹĴ¿ǣÜÍ]Ý]snåA{eƭ`ǻŊĿ\\\\ĳŬűYÂÿ¬jĖqßb¸L«¸©@ěĀ©ê¶ìÀEH|´bRľÓ¶rÀQþvl®ÕETzÜdb hw¤{LRdcb¯ÙVgƜßzÃôì®^jUèXÎ|UäÌ»rK\\\\ªN¼pZCüVY¤ɃRi^rPŇTÖ}|br°qňbĚ°ªiƶGQ¾²x¦PmlŜ[Ĥ¡ΞsĦÔÏâ\\\\ªÚŒU\\\\f¢N²§x|¤§xĔsZPòʛ²SÐqF`ªVÞŜĶƨVZÌL`¢dŐIqr\\\\oäõFÎ·¤»Ŷ×h¹]ClÙ\\\\¦ďÌį¬řtTӺƙgQÇÓHţĒ´ÃbEÄlbʔC|CŮkƮ[ʼ¬ň´KŮÈΰÌĪ¶ƶlðļATUvdTGº̼ÔsÊDÔveOg\"]],\n                \"encodeOffsets\": [[[105308, 37219]], [[95370, 40081]]]\n            },\n            \"properties\": {\"cp\": [101.778916, 36.623178], \"name\": \"青海\", \"childNum\": 2}\n        }, {\n            \"id\": \"640000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@KëÀęĞ«Oęȿȕı]ŉ¡åįÕÔ«ǴõƪĚQÐZhv K°öqÀÑS[ÃÖHƖčËnL]ûcÙß@ĝ¾}w»»oģF¹»kÌÏ·{zP§B­¢íyÅt@@á]Yv_ssģ¼ißĻL¾ġsKD£¡N_X¸}B~HaiÅf{«x»ge_bsKF¯¡IxmELcÿZ¤­ĢÝsuBLùtYdmVtNmtOPhRw~bd¾qÐ\\\\âÙH\\\\bImlNZ»loqlVmGā§~QCw¤{A\\\\PKNY¯bFkC¥sks_Ã\\\\ă«¢ħkJi¯rrAhĹûç£CUĕĊ_ÔBixÅÙĄnªÑaM~ħpOu¥sîeQ¥¤^dkKwlL~{L~hw^ófćKyE­K­zuÔ¡qQ¤xZÑ¢^ļöÜ¾Ep±âbÊÑÆ^fk¬NC¾YpxbK~¥eÖäBlt¿Đx½I[ĒǙWf»Ĭ}d§dµùEuj¨IÆ¢¥dXªƅx¿]mtÏwßRĶX¢͎vÆzƂZò®ǢÌʆCrâºMÞzÆMÒÊÓŊZÄ¾r°Î®Ȉmª²ĈUªĚîøºĮ¦ÌĘk^FłĬhĚiĀĖ¾iİbjÕ\"], [\"@@mfwěwMrŢªv@G\"]],\n                \"encodeOffsets\": [[[109366, 40242]], [[108600, 36303]]]\n            },\n            \"properties\": {\"cp\": [106.278179, 38.46637], \"name\": \"宁夏\", \"childNum\": 2}\n        }, {\n            \"id\": \"650000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@QØĔ²X¨~ǘBºjʐßØvKƔX¨vĊOÃ·¢i@~cĝe_«E}QxgɪëÏÃ@sÅyXoŖ{ô«ŸuXêÎf`C¹ÂÿÐGĮÕĞXŪōŸMźÈƺQèĽôe|¿ƸJR¤ĘEjcUóº¯Ĩ_ŘÁMª÷Ð¥OéÈ¿ÖğǤǷÂFÒzÉx[]­Ĥĝœ¦EP}ûƥé¿İƷTėƫœŕƅƱB»Đ±ēO¦E}`cȺrĦáŖuÒª«ĲπdƺÏØZƴwʄ¤ĖGĐǂZĶèH¶}ÚZצʥĪï|ÇĦMŔ»İĝǈì¥Βba­¯¥ǕǚkĆŵĦɑĺƯxūД̵nơʃĽá½M»òmqóŘĝčË¾ăCćāƿÝɽ©ǱŅ¹đ¥³ðLrÁ®ɱĕģŉǻ̋ȥơŻǛȡVï¹Ň۩ûkɗġƁ§ʇė̕ĩũƽō^ƕUv£ƁQïƵkŏ½ΉÃŭÇ³LŇʻ«ƭ\\\\lŭD{ʓDkaFÃÄa³ŤđÔGRÈƚhSӹŚsİ«ĐË[¥ÚDkº^Øg¼ŵ¸£EÍöůŉT¡c_ËKYƧUśĵÝU_©rETÏʜ±OñtYwē¨{£¨uM³x½şL©Ùá[ÓÐĥ Νtģ¢\\\\śnkOw¥±T»ƷFɯàĩÞáB¹ÆÑUwŕĽw[mG½Èå~Æ÷QyěCFmĭZīŵVÁƿQƛûXS²b½KÏ½ĉS©ŷXĕ{ĕK·¥Ɨcqq©f¿]ßDõU³h­gËÇïģÉɋwk¯í}I·œbmÉřīJɥĻˁ×xoɹīlc¤³Xù]ǅA¿w͉ì¥wÇN·ÂËnƾƍdÇ§đ®ƝvUm©³G\\\\}µĿQyŹlăµEwǇQ½yƋBe¶ŋÀůo¥AÉw@{Gpm¿AĳŽKLh³`ñcËtW±»ÕSëüÿďDu\\\\wwwù³VLŕOMËGh£õP¡erÏd{ġWÁč|yšg^ğyÁzÙs`s|ÉåªÇ}m¢Ń¨`x¥ù^}Ì¥H«YªƅAÐ¹n~ź¯f¤áÀzgÇDIÔ´AňĀÒ¶ûEYospõD[{ù°]uJqU|Soċxţ[õÔĥkŋÞŭZËºóYËüċrw ÞkrťË¿XGÉbřaDü·Ē÷AÃª[ÄäIÂ®BÕĐÞ_¢āĠpÛÄȉĖġDKwbmÄNôfƫVÉviǳHQµâFù­Âœ³¦{YGd¢ĚÜO {Ö¦ÞÍÀP^bƾl[vt×ĈÍEË¨¡Đ~´î¸ùÎhuè`¸HÕŔVºwĠââWò@{ÙNÝ´ə²ȕn{¿¥{l÷eé^eďXj©î\\\\ªÑòÜìc\\\\üqÕ[Č¡xoÂċªbØ­ø|¶ȴZdÆÂońéG\\\\¼C°ÌÆn´nxÊOĨŪƴĸ¢¸òTxÊǪMīĞÖŲÃɎOvʦƢ~FRěò¿ġ~åŊúN¸qĘ[Ĕ¶ÂćnÒPĒÜvúĀÊbÖ{Äî¸~Ŕünp¤ÂH¾ĄYÒ©ÊfºmÔĘcDoĬMŬS¤s²ʘÚžȂVŦ èW°ªB|ĲXŔþÈJĦÆæFĚêYĂªĂ]øªŖNÞüAfɨJ¯ÎrDDĤ`mz\\\\§~D¬{vJÂ«lµĂb¤pŌŰNĄ¨ĊXW|ų ¿¾ɄĦƐMTòP÷fØĶK¢ȝ˔Sô¹òEð­`Ɩ½ǒÂň×äı§ĤƝ§C~¡hlåǺŦŞkâ~}FøàĲaĞfƠ¥Ŕd®U¸źXv¢aƆúŪtŠųƠjdƺƺÅìnrh\\\\ĺ¯äɝĦ]èpĄ¦´LƞĬ´ƤǬ˼Ēɸ¤rºǼ²¨zÌPðŀbþ¹ļD¢¹\\\\ĜÑŚ¶ZƄ³àjĨoâȴLÊȮĐ­ĚăÀêZǚŐ¤qȂ\\\\L¢ŌİfÆs|zºeªÙæ§΢{Ā´ƐÚ¬¨Ĵà²łhʺKÞºÖTiƢ¾ªì°`öøu®Ê¾ãØ\"],\n                \"encodeOffsets\": [[88824, 50096]]\n            },\n            \"properties\": {\"cp\": [87.617733, 43.792818], \"name\": \"新疆\", \"childNum\": 1}\n        }, {\n            \"id\": \"110000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@ĽOÁûtŷmiÍt_H»Ĩ±d`¹­{bwYr³S]§§o¹qGtm_SŧoaFLgQN_dV@Zom_ć\\\\ßcÂ±x¯oœRcfe£o§ËgToÛJíĔóu|wP¤XnO¢ÉŦ¯rNÄā¤zâŖÈRpŢZÚ{GrFt¦Òx§ø¹RóäV¤XdżâºWbwŚ¨Ud®bêņ¾jnŎGŃŶnzÚSeîĜZczî¾i]ÍQaúÍÔiþĩȨWĢü|Ėu[qb[swP@ÅğP¿{\\\\¥A¨ÏÑ¨j¯X\\\\¯MKpA³[Hīu}}\"],\n                \"encodeOffsets\": [[120023, 41045]]\n            },\n            \"properties\": {\"cp\": [116.405285, 39.904989], \"name\": \"北京\", \"childNum\": 1}\n        }, {\n            \"id\": \"120000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\"@@ŬgX§Ü«E¶FÌ¬O_ïlÁgz±AXeµÄĵ{¶]gitgIj·¥îakS¨ÐƎk}ĕ{gBqGf{¿aU^fIư³õ{YıëNĿk©ïËZŏR§òoY×Ógcĥs¡bġ«@dekąI[nlPqCnp{ō³°`{PNdƗqSÄĻNNâyj]äÒD ĬH°Æ]~¡HO¾X}ÐxgpgWrDGpù^LrzWxZ^¨´T\\\\|~@IzbĤjeĊªz£®ĔvěLmV¾Ô_ÈNW~zbĬvG²ZmDM~~\"],\n                \"encodeOffsets\": [[120237, 41215]]\n            },\n            \"properties\": {\"cp\": [117.190182, 39.125596], \"name\": \"天津\", \"childNum\": 1}\n        }, {\n            \"id\": \"310000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@ɧư¬EpƸÁxc\"], [\"@@©ª\"], [\"@@MA\"], [\"@@QpİE§ÉC¾\"], [\"@@bŝÕÕEȣÚƥêImɇǦèÜĠÚÃƌÃ͎ó\"], [\"@@ǜûȬɋŭ×^sYɍDŋŽąñCG²«ªč@h_p¯A{oloY¬j@Ĳ`gQÚhr|ǀ^MĲvtbe´R¯Ô¬¨Yô¤r]ìƬį\"]],\n                \"encodeOffsets\": [[[124702, 32062]], [[124547, 32200]], [[124808, 31991]], [[124726, 32110]], [[124903, 32376]], [[124438, 32149]]]\n            },\n            \"properties\": {\"cp\": [121.472644, 31.231706], \"name\": \"上海\", \"childNum\": 6}\n        }, {\n            \"id\": \"500000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@vjG~nGŘŬĶȂƀƾ¹¸ØÎezĆT¸}êÐqHðqĖä¥^CÆIj²p\\\\_ æüY|[YxƊæu°xb®Űb@~¢NQt°¶Sæ Ê~rǉĔëĚ¢~uf`faĔJåĊnÖ]jƎćÊ@£¾a®£Ű{ŶĕFègLk{Y|¡ĜWƔtƬJÑxq±ĢN´òKLÈÃ¼D|s`ŋć]Ã`đMûƱ½~Y°ħ`ƏíW½eI½{aOIrÏ¡ĕŇapµÜƅġ^ÖÛbÙŽŏml½SêqDu[RãË»ÿw`»y¸_ĺę}÷`M¯ċfCVµqŉ÷Zgg`d½pDOÎCn^uf²ènh¼WtƏxRGg¦pVFI±G^Ic´ecGĹÞ½sëĬhxW}KÓe­XsbkF¦LØgTkïƵNï¶}Gyw\\\\oñ¡nmĈzj@Óc£»Wă¹Ój_m»¹·~MvÛaq»­ê\\\\ÂoVnÓØÍ²«bq¿efE Ĝ^Q~ Évýş¤²ĮpEİ}zcĺL½¿gÅ¡ýE¡ya£³t\\\\¨\\\\vú»¼§·Ñr_oÒý¥u_n»_At©ÞÅ±ā§IVeëY}{VPÀFA¨ąB}q@|Ou\\\\FmQFÝMwå}]|FmÏCawu_p¯sfÙgYDHl`{QEfNysB¦zG¸rHeN\\\\CvEsÐùÜ_·ÖĉsaQ¯}_UxÃđqNH¬Äd^ÝŰR¬ã°wećJE·vÝ·HgéFXjÉê`|ypxkAwWĐpb¥eOsmzwqChóUQl¥F^lafanòsrEvfQdÁUVfÎvÜ^eftET¬ôA\\\\¢sJnQTjPØxøK|nBzĞ»LYFDxÓvr[ehľvN¢o¾NiÂxGpâ¬zbfZo~hGi]öF||NbtOMn eA±tPTLjpYQ|SHYĀxinzDJÌg¢và¥Pg_ÇzIIII£®S¬ØsÎ¼£N\"], [\"@@ifjN@s\"]],\n                \"encodeOffsets\": [[[109628, 30765]], [[111725, 31320]]]\n            },\n            \"properties\": {\"cp\": [106.504962, 29.533155], \"name\": \"重庆\", \"childNum\": 2}\n        }, {\n            \"id\": \"810000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": [[\"@@AlBk\"], [\"@@mn\"], [\"@@EpFo\"], [\"@@ea¢pl¸Eõ¹hj[]ÔCÎ@lj¡uBX´AI¹[yDU]W`çwZkmcMpÅv}IoJlcafŃK°ä¬XJmÐ đhI®æÔtSHnEÒrÈc\"], [\"@@rMUwAS®e\"]],\n                \"encodeOffsets\": [[[117111, 23002]], [[117072, 22876]], [[117045, 22887]], [[116975, 23082]], [[116882, 22747]]]\n            },\n            \"properties\": {\"cp\": [114.173355, 22.320048], \"name\": \"香港\", \"childNum\": 5}\n        }, {\n            \"id\": \"820000\",\n            \"type\": \"Feature\",\n            \"geometry\": {\"type\": \"Polygon\", \"coordinates\": [\"@@kÊd°å§s\"], \"encodeOffsets\": [[116279, 22639]]},\n            \"properties\": {\"cp\": [113.54909, 22.198951], \"name\": \"澳门\", \"childNum\": 1}\n        }],\n        \"UTF8Encoding\": true\n    });\n}));","(function (root, factory) {\n    if (typeof window.define === 'function' && window.define.amd) {\n        // AMD. Register as an anonymous module.\n        window.define(['exports', 'echarts'], factory);\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        module.exports = factory(exports, require('echarts'));\n    } else {\n        // Browser globals\n        module.exports = factory({}, root.echarts);\n    }\n}(this, function (exports, echarts) {\n    var log = function (msg) {\n        if (typeof console !== 'undefined') {\n            console && console.error && console.error(msg);\n        }\n    };\n    if (!echarts) {\n        log('ECharts is not Loaded');\n        return;\n    }\n\n    var colors = [\n        \"#187fc5\",\n        \"#0bbfff\",\n        \"#8fd9f3\",\n        \"#628dab\",\n        \"#b4c8d6\",\n        \"#d3e5f2\",\n        \"#84b2de\",\n        \"#6ea0cf\",\n        \"#558abc\",\n        \"#3a76af\",\n        \"#2a639a\",\n        \"#0b4a87\",\n        \"#00274d\",\n        \"#aad2dc\",\n        \"#83bac8\",\n        \"#5694a4\",\n        \"#2c7487\",\n        \"#0b4d5f\",\n        \"#003442\",\n        \"#042129\"\n    ];\n\n    echarts.registerTheme('customed', {\n        \"color\": colors,\n        \"backgroundColor\": \"rgba(0, 0, 0, 0)\",\n        \"textStyle\": {},\n        \"title\": {\n            \"textStyle\": {\n                \"color\": \"#364055\"\n            },\n            \"subtextStyle\": {\n                \"color\": \"#9da2ad\"\n            }\n        },\n        \"line\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 1\n                }\n            },\n            \"lineStyle\": {\n                \"normal\": {\n                    \"width\": 2\n                }\n            },\n            \"symbolSize\": 4,\n            \"symbol\": \"emptyCircle\",\n            \"smooth\": true\n        },\n        \"radar\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 1\n                }\n            },\n            \"lineStyle\": {\n                \"normal\": {\n                    \"width\": 2\n                }\n            },\n            \"symbolSize\": 4,\n            \"symbol\": \"emptyCircle\",\n            \"smooth\": true\n        },\n        \"bar\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"barBorderWidth\": 0,\n                    \"barBorderColor\": \"#ccc\"\n                },\n                \"emphasis\": {\n                    \"barBorderWidth\": 0,\n                    \"barBorderColor\": \"#ccc\"\n                }\n            }\n        },\n        \"pie\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                },\n                \"emphasis\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                }\n            }\n        },\n        \"scatter\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                },\n                \"emphasis\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                }\n            }\n        },\n        \"boxplot\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                },\n                \"emphasis\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                }\n            }\n        },\n        \"parallel\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                },\n                \"emphasis\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                }\n            }\n        },\n        \"sankey\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                },\n                \"emphasis\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                }\n            }\n        },\n        \"funnel\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                },\n                \"emphasis\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                }\n            }\n        },\n        \"gauge\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                },\n                \"emphasis\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                }\n            }\n        },\n        \"candlestick\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"color\": \"#187fc5\",\n                    \"color0\": \"#ff871f\",\n                    \"borderColor\": \"#187fc5\",\n                    \"borderColor0\": \"#ff871f\",\n                    \"borderWidth\": \"1\"\n                }\n            }\n        },\n        \"graph\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"borderWidth\": 0,\n                    \"borderColor\": \"#ccc\"\n                }\n            },\n            \"lineStyle\": {\n                \"normal\": {\n                    \"width\": 1,\n                    \"color\": \"#aaa\"\n                }\n            },\n            \"symbolSize\": 4,\n            \"symbol\": \"emptyCircle\",\n            \"smooth\": true,\n            \"color\": [\n                \"#187fc5\",\n                \"#0bbfff\",\n                \"#8fd9f3\",\n                \"#628dab\",\n                \"#b4c8d6\",\n                \"#d3e5f2\",\n                \"#84b2de\",\n                \"#6ea0cf\",\n                \"#558abc\",\n                \"#3a76af\",\n                \"#2a639a\",\n                \"#0b4a87\",\n                \"#00274d\",\n                \"#aad2dc\",\n                \"#83bac8\",\n                \"#5694a4\",\n                \"#2c7487\",\n                \"#0b4d5f\",\n                \"#003442\",\n                \"#042129\"\n            ],\n            \"label\": {\n                \"normal\": {\n                    \"textStyle\": {\n                        \"color\": \"#ffffff\"\n                    }\n                }\n            }\n        },\n        \"map\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"areaColor\": \"#efefef\",\n                    \"borderColor\": \"#ffffff\",\n                    \"borderWidth\": 0.5\n                },\n                \"emphasis\": {\n                    \"areaColor\": \"#c7d5da\",\n                    \"borderColor\": \"#ffffff\",\n                    \"borderWidth\": 1\n                }\n            },\n            \"label\": {\n                \"normal\": {\n                    \"textStyle\": {\n                        \"color\": \"#000\"\n                    }\n                },\n                \"emphasis\": {\n                    \"textStyle\": {\n                        \"color\": \"#364055\"\n                    }\n                }\n            }\n        },\n        \"geo\": {\n            \"itemStyle\": {\n                \"normal\": {\n                    \"areaColor\": \"#efefef\",\n                    \"borderColor\": \"#ffffff\",\n                    \"borderWidth\": 0.5\n                },\n                \"emphasis\": {\n                    \"areaColor\": \"#c7d5da\",\n                    \"borderColor\": \"#ffffff\",\n                    \"borderWidth\": 1\n                }\n            },\n            \"label\": {\n                \"normal\": {\n                    \"textStyle\": {\n                        \"color\": \"#000\"\n                    }\n                },\n                \"emphasis\": {\n                    \"textStyle\": {\n                        \"color\": \"#364055\"\n                    }\n                }\n            }\n        },\n        \"categoryAxis\": {\n            \"axisLine\": {\n                \"show\": true,\n                \"lineStyle\": {\n                    \"color\": \"#979797\"\n                }\n            },\n            \"axisTick\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"color\": \"#333\"\n                }\n            },\n            \"axisLabel\": {\n                \"show\": true,\n                \"textStyle\": {\n                    \"color\": \"#b3b3b3\"\n                }\n            },\n            \"splitLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"color\": [\n                        \"#ccc\"\n                    ]\n                }\n            },\n            \"splitArea\": {\n                \"show\": false,\n                \"areaStyle\": {\n                    \"color\": [\n                        \"rgba(250,250,250,0.3)\",\n                        \"rgba(200,200,200,0.3)\"\n                    ]\n                }\n            }\n        },\n        \"valueAxis\": {\n            \"axisLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"color\": \"#333\"\n                }\n            },\n            \"axisTick\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"color\": \"#333\"\n                }\n            },\n            \"axisLabel\": {\n                \"show\": true,\n                \"textStyle\": {\n                    \"color\": \"#b3b3b3\"\n                }\n            },\n            \"splitLine\": {\n                \"show\": true,\n                \"lineStyle\": {\n                    \"color\": [\n                        \"#ebebeb\"\n                    ]\n                }\n            },\n            \"splitArea\": {\n                \"show\": false,\n                \"areaStyle\": {\n                    \"color\": [\n                        \"rgba(250,250,250,0.3)\",\n                        \"rgba(200,200,200,0.3)\"\n                    ]\n                }\n            }\n        },\n        \"logAxis\": {\n            \"axisLine\": {\n                \"show\": true,\n                \"lineStyle\": {\n                    \"color\": \"#333\"\n                }\n            },\n            \"axisTick\": {\n                \"show\": true,\n                \"lineStyle\": {\n                    \"color\": \"#333\"\n                }\n            },\n            \"axisLabel\": {\n                \"show\": true,\n                \"textStyle\": {\n                    \"color\": \"#333\"\n                }\n            },\n            \"splitLine\": {\n                \"show\": true,\n                \"lineStyle\": {\n                    \"color\": [\n                        \"#ccc\"\n                    ]\n                }\n            },\n            \"splitArea\": {\n                \"show\": false,\n                \"areaStyle\": {\n                    \"color\": [\n                        \"rgba(250,250,250,0.3)\",\n                        \"rgba(200,200,200,0.3)\"\n                    ]\n                }\n            }\n        },\n        \"timeAxis\": {\n            \"axisLine\": {\n                \"show\": true,\n                \"lineStyle\": {\n                    \"color\": \"#333\"\n                }\n            },\n            \"axisTick\": {\n                \"show\": true,\n                \"lineStyle\": {\n                    \"color\": \"#333\"\n                }\n            },\n            \"axisLabel\": {\n                \"show\": true,\n                \"textStyle\": {\n                    \"color\": \"#333\"\n                }\n            },\n            \"splitLine\": {\n                \"show\": true,\n                \"lineStyle\": {\n                    \"color\": [\n                        \"#ccc\"\n                    ]\n                }\n            },\n            \"splitArea\": {\n                \"show\": false,\n                \"areaStyle\": {\n                    \"color\": [\n                        \"rgba(250,250,250,0.3)\",\n                        \"rgba(200,200,200,0.3)\"\n                    ]\n                }\n            }\n        },\n        \"toolbox\": {\n            \"iconStyle\": {\n                \"normal\": {\n                    \"borderColor\": \"#647f98\"\n                },\n                \"emphasis\": {\n                    \"borderColor\": \"#647f98\"\n                }\n            }\n        },\n        \"legend\": {\n            \"textStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"tooltip\": {\n            \"axisPointer\": {\n                \"lineStyle\": {\n                    \"color\": \"#b7bbc4\",\n                    \"width\": 1\n                },\n                \"crossStyle\": {\n                    \"color\": \"#b7bbc4\",\n                    \"width\": 1\n                }\n            }\n        },\n        \"timeline\": {\n            \"lineStyle\": {\n                \"color\": \"#293c55\",\n                \"width\": 1\n            },\n            \"itemStyle\": {\n                \"normal\": {\n                    \"color\": \"#293c55\",\n                    \"borderWidth\": 1\n                },\n                \"emphasis\": {\n                    \"color\": \"#187fc5\"\n                }\n            },\n            \"controlStyle\": {\n                \"normal\": {\n                    \"color\": \"#293c55\",\n                    \"borderColor\": \"#293c55\",\n                    \"borderWidth\": 0.5\n                },\n                \"emphasis\": {\n                    \"color\": \"#293c55\",\n                    \"borderColor\": \"#293c55\",\n                    \"borderWidth\": 0.5\n                }\n            },\n            \"checkpointStyle\": {\n                \"color\": \"#187fc5\",\n                \"borderColor\": \"#187fc5\"\n            },\n            \"label\": {\n                \"normal\": {\n                    \"textStyle\": {\n                        \"color\": \"#293c55\"\n                    }\n                },\n                \"emphasis\": {\n                    \"textStyle\": {\n                        \"color\": \"#293c55\"\n                    }\n                }\n            }\n        },\n        \"visualMap\": {\n            \"color\": [\n                \"#c7d5da\",\n                \"#e3eaed\",\n                \"#efefef\"\n            ]\n        },\n        \"dataZoom\": {\n            \"backgroundColor\": \"rgba(47,69,84,0)\",\n            \"dataBackgroundColor\": \"rgba(47,69,84,0.3)\",\n            \"fillerColor\": \"rgba(167,183,204,0.4)\",\n            \"handleColor\": \"#a7b7cc\",\n            \"handleSize\": \"100%\",\n            \"textStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"markPoint\": {\n            \"label\": {\n                \"normal\": {\n                    \"textStyle\": {\n                        \"color\": \"#ffffff\"\n                    }\n                },\n                \"emphasis\": {\n                    \"textStyle\": {\n                        \"color\": \"#ffffff\"\n                    }\n                }\n            }\n        }\n    });\n\n\n    return {\n        base: colors,\n        names: {\n            POSITIVE: 'rgba(24,127,197,1)',\n            NEGATIVE: 'rgba(255,135,31,1)',\n            NEUTRAL: 'rgba(24,127,197,.5)',\n        }\n    };\n}));\n","/**\n * @update mizi.lin@0.1.25.20180523\n * ::=> try echart setOption && resize\n * @update huao@v0.1.22.20181009\n * ::=> 将图的height去掉padding长度\n */\n\n// mark\n// 监听dom变化\n// element-resize-detector\n// const erd = elementResizeDetectorMaker({strategy: \"scroll\"});\n\nimport * as React from 'react';\nimport * as echarts from 'echarts';\nimport * as _ from 'lodash';\nimport  mu from 'mzmu';\nimport 'echarts-wordcloud';\nimport '../assets/js/china.js';\nimport '../assets/js/theme.customed.js';\nimport '../assets/styles/mr-echarts.component.less';\nimport MrEchartsServices from './mr-echarts.services';\nimport { default as MrServices } from '../mr-common/mr.services';\n\nexport interface MrEchartsProps {\n    /**\n     * 传入数据(推荐):\n     * - 与 options 二者存其一；\n     */\n    data?: any[];\n\n    /**\n     * 数据类型:\n     * - 仅在 data 存在时生效\n     * @default 'dataSource'\n     * @values 'dataSet, dataSource'\n     */\n    dataType?: string;\n\n    /**\n     * 数据模型:\n     * - 仅在 data 存在时生效\n     *\n     * @default 'multiple'\n     * @values 'single, multiple'\n     * */\n    dataModel?: string;\n\n    /**\n     * 对data进行数据处理\n     *\n     * @deprecated\n     */\n    transform?: any;\n\n    /**\n     * 图表类型；\n     * - 支持子类型(setting or plugin)；\n     *\n     * @example pie::ring::rose\n     */\n    chartTypes?: string;\n\n    /**\n     * setting\n     * - 对options值进行配置处理\n     * - plugin 针对chartsType的插件注册方案\n     */\n    setting?: any;\n\n    /**\n     * EchartOptions\n     * - 不是推荐方案，but 支持直接传递EchartOptions生成图表\n     */\n    options?: any;\n\n    /**\n     * Echart 主题方案\n     * - 需要实现引入\n     * @default 'customed'\n     */\n    theme?: string;\n\n    /**\n     * Echart 渲染类型\n     * - values: canvas, svg\n     *\n     * @default 'canvas'\n     */\n    renderType?: string;\n\n    style?: React.CSSProperties;\n\n    className?: string;\n\n    /**\n     * 渲染结束，回调方法\n     * - 不推荐使用\n     */\n    result?: Function;\n\n    /**\n     * 隐藏基因遗传对象\n     */\n    _gene?: any;\n\n    /**\n     * 是否每次都渲染组件\n     *\n     * @default false\n     */\n    force?: boolean;\n\n    /**\n     * 绑定关联 Echarts 事件方法\n     * - 点击\n     */\n    chartClick?: Function;\n    /**\n     * - 双击\n     */\n    chartDblClick?: Function;\n    /**\n     * - 鼠标下按\n     */\n    chartMouseDown?: Function;\n    chartMouseUp?: Function;\n    chartMouseOver?: Function;\n    chartMouseOut?: Function;\n    chartGlobalOut?: Function;\n}\n\nclass MrEcharts extends React.Component<MrEchartsProps, {}> {\n    static DISPLAY_NAME = 'MrEcharts';\n    static THEME = 'customed';\n    static RENDER_TYPE = 'canvas';\n    static defaultProps = {\n        force: false\n    };\n\n    // 待Echarts渲染的dom元素\n    _chartRef: any;\n    _chart: any;\n    _theme: any;\n\n    _width: number;\n    _height: number;\n\n    /**\n     * 获得 echarts instance\n     * @param ref\n     */\n    getCharts(ref) {\n        return (\n            this._chart ||\n            mu.run(ref, () => {\n                let { renderType = 'canvas' } = this.props;\n                let theme = this.getTheme();\n                return echarts.init(ref, theme.current, {\n                    renderer: renderType\n                });\n            })\n        );\n    }\n\n    /**\n     * 获得当前echart theme\n     *\n     * MrCharts.theme > MrEchartsServices.theme > static.theme\n     */\n    getTheme() {\n        let prev = this._theme;\n        let { theme } = this.props;\n        theme = theme || MrEchartsServices._theme().theme || MrEcharts.THEME;\n        !_.isEmpty(MrEchartsServices._theme().themeConfig) && echarts.registerTheme(theme, MrEchartsServices._theme().themeConfig);\n        let first = !mu.isExist(prev);\n        let change = first ? false : prev !== theme;\n        this._theme = theme;\n        return {\n            first,\n            change,\n            prev,\n            current: theme\n        };\n    }\n\n    /**\n     * 绘制Echarts图表\n     * @type {Function}\n     */\n    drawCharts = _.debounce((props: any) => {\n        let _chart = this.getCharts(this._chartRef);\n        let { data, dataType, dataModel, chartTypes } = props;\n        let { options } = props;\n        let { result, setting, transform } = props;\n\n        // data 与 setting 的计算结果\n        let rst: any;\n\n        if (!_chart) {\n            return void 0;\n        } else {\n            this._chart = _chart;\n        }\n\n        /**\n         * 针对词云图，做一次画布清理,\n         *\n         * 如果不做词云的画布清理，画布可以重绘时，\n         * 可能会残留上次词云痕迹\n         * 处理词云图的data，将value为undefined 或 null 的设为0------胡奥20181106\n         */\n        mu.run(chartTypes.indexOf('wordCloud') > -1, () => {\n            _chart.clear();\n        });\n\n        /**\n         * 数据获取可能来自上层元素'遗传'\n         */\n        data = mu.ifnvl(data, _.get(props, '_gene.data'));\n\n        /**\n         * 空数据不做渲染，委托给 MasterRT NoDataComponent, 显示无数据状态\n         */\n        if (mu.isEmpty(data) && mu.isEmpty(options)) {\n            return void 0;\n        }\n\n        /**\n         * data 和 options  二者只支持其中一个，两个全有退出\n         */\n        if (mu.isNotEmpty(data) && mu.isNotEmpty(options)) {\n            console.error('data 与 options 不能同时设置');\n            return void 0;\n        }\n\n        /**\n         *\n         * 处理data，将value为undefined 或 null 的设为0------胡奥20181109\n         */\n        data = mu.map(data, (d) => {\n            if (mu.isBaseType(d.value)) {\n                if (mu.isNull(d.value) || mu.isUndefined(d.value) || isNaN(d.value)) {\n                    d.value = 0;\n                }\n            } else {\n                d.value = 0;\n            }\n            return d;\n        });\n\n        /**\n         * 通过 data + setting, 获得最终的 options\n         */\n        mu.run(data, () => {\n            rst = MrEchartsServices.getOptions(data, dataType, dataModel, chartTypes, setting, transform);\n            options = rst.options;\n        });\n\n        /**\n         * 通过 options + setting，获得最终的 options\n         */\n        mu.run(options, () => {\n            options = MrEchartsServices.reOptions(options, setting, chartTypes);\n        });\n\n        // 使用 noMerge 避免两次 options变化产生冲突\n        console.debug('::::::: options => ~~', options);\n\n        try {\n            _chart.setOption(options, true);\n        } catch (e) {\n            console.error(e);\n        }\n\n        this.registerEvents(props, options, rst);\n\n        // call back info\n        result && result(options, rst);\n    }, 300);\n\n    /**\n     * 注册Echart事件\n     * 只执行一次\n     * @param props\n     * @param options\n     * @param result\n     */\n    registerEvents = _.once((props, options, result) => {\n        let { chartClick, chartDblClick, chartMouseDown, chartMouseUp, chartMouseOver, chartMouseOut, chartGlobalOut } = props;\n\n        this._chart.off('click');\n        this._chart.off('dblClick');\n        this._chart.off('mousedown');\n        this._chart.off('mouseup');\n        this._chart.off('mouseover');\n        this._chart.off('mouseout');\n        this._chart.off('globalout');\n\n        this._chart.on('click', (e: any) => {\n            chartClick && chartClick(e, props, options, result);\n        });\n\n        this._chart.on('dblClick', (e: any) => {\n            chartDblClick && chartDblClick(e, props, options, result);\n        });\n        this._chart.on('mousedown', (e: any) => {\n            chartMouseDown && chartMouseDown(e, props, options, result);\n        });\n        this._chart.on('mouseup', (e: any) => {\n            chartMouseUp && chartMouseUp(e, props, options, result);\n        });\n        this._chart.on('mouseover', (e: any) => {\n            chartMouseOver && chartMouseOver(e, props, options, result);\n        });\n        this._chart.on('mouseout', (e: any) => {\n            chartMouseOut && chartMouseOut(e, props, options, result);\n        });\n        this._chart.on('globalout', (e: any) => {\n            chartGlobalOut && chartGlobalOut(e, props, options, result);\n        });\n    });\n\n    resize = mu.bind(() => {\n        try {\n            this._chart && this._chart.resize && this._chart.resize();\n        } catch (e) {}\n    }, this);\n\n    windowResize = mu.debounce(this.resize, 300);\n\n    dispose() {\n        mu.run(this._chart, () => {\n            this._chart.dispose();\n            this._chart = void 0;\n        });\n    }\n\n    /**\n     * 修改canvas的高度\n     * @param style object\n     */\n    getStyle(style: any): any {\n        if (!style) {\n            return void 0;\n        } else {\n            let newStyle = Object.assign({}, style);\n            if (style.height) {\n                newStyle.height = newStyle.height - 16;\n            }\n            return newStyle;\n        }\n    }\n\n    componentDidMount() {\n        this.drawCharts(this.props);\n        window.addEventListener('resize', this.windowResize);\n    }\n\n    componentDidUpdate(prevProps) {\n        const theme = this.getTheme();\n        const { style, className, transform } = this.props;\n        let { data, options, setting, chartTypes } = prevProps;\n        let { force, data: nextData, options: nextOptions, setting: nextSetting, chartTypes: nextChartTypes } = this.props;\n\n        /**\n         * 样式产生变化 resize\n         */\n        if (!_.isEqual(prevProps.style, style) || !_.isEqual(prevProps.className, className)) {\n            this.resize();\n        }\n\n        /**\n         * 渲染主题产生变化\n         * 需要 dispose 后 instance\n         *\n         * 暂时不对 renderType 变化做追踪，极小概率事件\n         * 暂时不对 event 变化做追踪\n         * 若一定要做变化，使用 force 模式修改\n         */\n        if (theme.change) {\n            this.dispose();\n            this.drawCharts(this.props);\n        }\n\n        // break 分开写，方便调试\n        switch (true) {\n            case force:\n            case !_.isEqual(prevProps.transform, transform):\n                this.dispose();\n                this.drawCharts(this.props);\n                break;\n            case chartTypes !== nextChartTypes:\n                this.drawCharts(this.props);\n                break;\n            case !_.isEqual(data, nextData):\n                this.drawCharts(this.props);\n                break;\n            case JSON.stringify(setting) !== JSON.stringify(nextSetting):\n                this.drawCharts(this.props);\n                break;\n            case JSON.stringify(options) !== JSON.stringify(nextOptions):\n                this.drawCharts(this.props);\n                break;\n        }\n    }\n\n    componentWillUnmount() {\n        // 组件销货，释放内存\n        this.dispose();\n        // 注销注册事件\n        window.removeEventListener('reszie', this.windowResize);\n    }\n\n    render() {\n        let { className, style } = this.props;\n        let panelClass = MrServices.cls(\n            {\n                'mr-echarts': true\n            },\n            className\n        );\n\n        return <div className={panelClass} style={this.getStyle(style)} ref={(div) => (this._chartRef = div)} />;\n    }\n}\n\nexport default MrEcharts;\ntry {\n    // @ts-ignore\n    MrEcharts.displayName = \"MrEcharts\";\n    // @ts-ignore\n    MrEcharts.__docgenInfo = { \"description\": \"\", \"displayName\": \"MrEcharts\", \"props\": { \"data\": { \"defaultValue\": null, \"description\": \"\\u4F20\\u5165\\u6570\\u636E(\\u63A8\\u8350):\\n- \\u4E0E options \\u4E8C\\u8005\\u5B58\\u5176\\u4E00\\uFF1B\", \"name\": \"data\", \"required\": false, \"type\": { \"name\": \"any[]\" } }, \"dataType\": { \"defaultValue\": { value: \"'dataSource'\" }, \"description\": \"\\u6570\\u636E\\u7C7B\\u578B:\\n- \\u4EC5\\u5728 data \\u5B58\\u5728\\u65F6\\u751F\\u6548\\n@values 'dataSet, dataSource'\", \"name\": \"dataType\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"dataModel\": { \"defaultValue\": { value: \"'multiple'\" }, \"description\": \"\\u6570\\u636E\\u6A21\\u578B:\\n- \\u4EC5\\u5728 data \\u5B58\\u5728\\u65F6\\u751F\\u6548\\n@values 'single, multiple'\", \"name\": \"dataModel\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\\u5BF9data\\u8FDB\\u884C\\u6570\\u636E\\u5904\\u7406\\n@deprecated\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"chartTypes\": { \"defaultValue\": null, \"description\": \"\\u56FE\\u8868\\u7C7B\\u578B\\uFF1B\\n- \\u652F\\u6301\\u5B50\\u7C7B\\u578B(setting or plugin)\\uFF1B\\n@example pie::ring::rose\", \"name\": \"chartTypes\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"setting\": { \"defaultValue\": null, \"description\": \"setting\\n- \\u5BF9options\\u503C\\u8FDB\\u884C\\u914D\\u7F6E\\u5904\\u7406\\n- plugin \\u9488\\u5BF9chartsType\\u7684\\u63D2\\u4EF6\\u6CE8\\u518C\\u65B9\\u6848\", \"name\": \"setting\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"options\": { \"defaultValue\": null, \"description\": \"EchartOptions\\n- \\u4E0D\\u662F\\u63A8\\u8350\\u65B9\\u6848\\uFF0Cbut \\u652F\\u6301\\u76F4\\u63A5\\u4F20\\u9012EchartOptions\\u751F\\u6210\\u56FE\\u8868\", \"name\": \"options\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"theme\": { \"defaultValue\": { value: \"'customed'\" }, \"description\": \"Echart \\u4E3B\\u9898\\u65B9\\u6848\\n- \\u9700\\u8981\\u5B9E\\u73B0\\u5F15\\u5165\", \"name\": \"theme\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"renderType\": { \"defaultValue\": { value: \"'canvas'\" }, \"description\": \"Echart \\u6E32\\u67D3\\u7C7B\\u578B\\n- values: canvas, svg\", \"name\": \"renderType\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"CSSProperties\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"result\": { \"defaultValue\": null, \"description\": \"\\u6E32\\u67D3\\u7ED3\\u675F\\uFF0C\\u56DE\\u8C03\\u65B9\\u6CD5\\n- \\u4E0D\\u63A8\\u8350\\u4F7F\\u7528\", \"name\": \"result\", \"required\": false, \"type\": { \"name\": \"Function\" } }, \"_gene\": { \"defaultValue\": null, \"description\": \"\\u9690\\u85CF\\u57FA\\u56E0\\u9057\\u4F20\\u5BF9\\u8C61\", \"name\": \"_gene\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"force\": { \"defaultValue\": { value: \"false\" }, \"description\": \"\\u662F\\u5426\\u6BCF\\u6B21\\u90FD\\u6E32\\u67D3\\u7EC4\\u4EF6\", \"name\": \"force\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"chartClick\": { \"defaultValue\": null, \"description\": \"\\u7ED1\\u5B9A\\u5173\\u8054 Echarts \\u4E8B\\u4EF6\\u65B9\\u6CD5\\n- \\u70B9\\u51FB\", \"name\": \"chartClick\", \"required\": false, \"type\": { \"name\": \"Function\" } }, \"chartDblClick\": { \"defaultValue\": null, \"description\": \"- \\u53CC\\u51FB\", \"name\": \"chartDblClick\", \"required\": false, \"type\": { \"name\": \"Function\" } }, \"chartMouseDown\": { \"defaultValue\": null, \"description\": \"- \\u9F20\\u6807\\u4E0B\\u6309\", \"name\": \"chartMouseDown\", \"required\": false, \"type\": { \"name\": \"Function\" } }, \"chartMouseUp\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartMouseUp\", \"required\": false, \"type\": { \"name\": \"Function\" } }, \"chartMouseOver\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartMouseOver\", \"required\": false, \"type\": { \"name\": \"Function\" } }, \"chartMouseOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartMouseOut\", \"required\": false, \"type\": { \"name\": \"Function\" } }, \"chartGlobalOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartGlobalOut\", \"required\": false, \"type\": { \"name\": \"Function\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/mr-echarts/mr-echarts.component.tsx#MrEcharts\"] = { docgenInfo: MrEcharts.__docgenInfo, name: \"MrEcharts\", path: \"src/lib/mr-echarts/mr-echarts.component.tsx#MrEcharts\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","/**\n * MrEchartsService\n *\n * @update mizi.lin@20180508\n * ::=> 支持按name匹配颜色\n *\n * @update mizi.lin@v0.1.25.20180523\n * ::=> 处理single状态下，x值存在与否，处理方式\n *\n * //todo 重写 echarts 实现方式\n *\n * @update mizi.lin@v0.1.26-b3.20180531\n * ::=> 添加基于雷达的\n *\n * @update mizi.lin@v0.1.26-b8.2018o531\n * ::=> 添加纵向计算占比值，以及@group方法\n *\n * @update mizi.lin@v0.1.27-b3.2018o6o6\n * ::=> 修改dataView value = 0 时呈现问题，以及设置默认支持中文字符下载\n *\n * @uodate mizi.lin@v0.2.0-b8.2o18o614\n * :: => fixed bugs: 雷达数据在计算雷达计算最大最小值时，源数据未进行transform, 从而造成 max, min 值计算错位\n *\n */\n\nimport  mu from 'mzmu';\nimport * as _ from 'lodash';\nimport { defDataModel, defOptions, defSubType, subSetting } from './mr-echarts.setting';\nimport * as _colors from '../assets/js/theme.customed.js';\nimport { default as MrServices } from '../mr-common/mr.services';\n\n// CHART_NAME 决定 legend\nconst CHART_NAME = 'name';\n// CHART_X 决定 x 轴\nconst CHART_X = 'x';\n// CHART_VALUE 决定y轴数据\n// const CHART_VALUE = 'value';\n\n/**\n * MrEcharts Services\n */\nexport default {\n    _theme() {\n        return mu.ifempty(MrServices.getEchartsTheme(), 'customed');\n    },\n\n    _colors() {\n        return mu.ifempty(MrServices.getEchartsColors(), _colors);\n    },\n\n    CHART_RENDER_TYPE: 'canvas',\n\n    /**\n     * 序列化对象\n     * @param setting\n     */\n    serialize(setting: any) {\n        return mu.type(setting, 'array')\n            ? setting\n            : mu.map(\n                  setting,\n                  (v, k) => {\n                      return { [k]: v };\n                  },\n                  []\n              );\n    },\n\n    /**\n     * 数据转换\n     * @param data\n     * @param rules\n     */\n    ['@convert'](data: any[], rules: object[]) {\n        return mu.map(data, (item) => {\n            mu.each(rules, (source, target) => {\n                let v = _.get(item, source);\n                if (mu.isExist(v)) {\n                    item[target] = v;\n                }\n            });\n            return item;\n        });\n    },\n\n    /**\n     * 按数据分组\n     * @param data\n     * @param key\n     */\n    ['@group'](data: any[], key: string) {\n        let groups = mu.groupArray(data, key);\n        return mu.map(groups, (o) => o, []);\n    },\n\n    /**\n     * 重写 _.set\n     * 支持按通配符 * 全组遍历\n     * @param obj\n     * @param key\n     * @param value\n     * @return {*}\n     */\n    muSet(obj, key, value) {\n        let fn = {\n            // xy轴互换\n            xyExchange: (options: any, isExhange) => {\n                let _opts = _.clone(options);\n                options['yAxis'] = _opts['xAxis'];\n                options['xAxis'] = _opts['yAxis'];\n                // _.set(options, 'grid.left', 100);\n                return options;\n            },\n\n            // 线图和柱形图互换\n            lineBarExchange: (options) => {\n                let { series, xAxis } = options;\n                mu.each(series, (o) => {\n                    if (o.type === 'line') {\n                        o.type = 'bar';\n                        xAxis[0].boundaryGap = true;\n                    } else if (o.type === 'bar') {\n                        o.type = 'line';\n                        xAxis[0].boundaryGap = false;\n                    }\n                });\n            },\n\n            // 显示x轴所有值\n            xAxisShowAll: (options, value) => {\n                _.set(options, 'xAxis[0].axisLabel.interval', 0);\n                _.set(options, 'xAxis[0].axisLabel.rotate', 20);\n                // _.set(options, 'grid.bottom', 50);\n                return options;\n            },\n\n            // 是否显示 legend\n            legendShow: (options) => {\n                let _show = !mu.ifnvl(_.get(options, 'legend.show'), true);\n                _.set(options, 'legend.show', _show);\n                _.set(options, 'grid.top', _show ? 60 : 10);\n                return options;\n            },\n\n            // deleteKey\n            deleteKey: (options) => {}\n        };\n\n        let _obj = mu.clone(obj);\n        let _fn;\n\n        // get 原数据\n        if (typeof value === 'string' && /\\$\\$/.test(value)) {\n            let _path = value.replace(/\\$\\$/, '');\n            value = _.get(_obj, _path);\n        }\n\n        // 配置自定义函数\n        if (/\\*\\*/.test(key) && typeof value === 'function') {\n            key = key.replace(/\\*\\*/, '');\n            _fn = value;\n        }\n\n        // 各种方法处理\n        if (/\\$\\$/.test(key)) {\n            let _path = key.replace(/\\$\\$/, '');\n            let [p1, p2] = _path.split('[*]');\n            p2 = p2.replace(/^\\./, '');\n\n            let _obj = mu.clone(obj);\n\n            mu.each(_.get(obj, p1), (o, idx) => {\n                value = _fn ? _fn(_obj, o, idx) : value;\n                if (p2) {\n                    _.set(o, p2, value);\n                } else {\n                    _.set(obj, `${p1}[${idx}]`, value);\n                }\n            });\n        } else if (/^@@/.test(key)) {\n            let fname = key.replace(/^@@/, '');\n            fn[fname] && fn[fname](obj, value);\n        } else {\n            value = _fn ? _fn(obj) : value;\n            _.set(obj, key, value);\n        }\n\n        return obj;\n    },\n\n    /**\n     * 获得分组数中的最大最小值\n     */\n    maxmin(data, groupKey) {\n        let _data = mu.groupArray(data, groupKey);\n        return mu.map(_data, (o) => {\n            return {\n                max: _.maxBy(o, (oo: any) => parseFloat(oo.value)),\n                min: _.minBy(o, (oo: any) => parseFloat(oo.value))\n            };\n        });\n    },\n\n    /**\n     * 数据转换\n     * @param data 数据源\n     * @param transform 数据处理\n     * @param dataType 数据来源类型\n     * @param dataModel 数据转换模型\n     * @param setting 配置参数\n     * @return {*}\n     */\n    transform(data, transform = [], dataType = 'dataSource', dataModel = 'group', setting = {}) {\n        // 复制原数据，作为返回数据比较使用\n\n        mu.run(transform, () => {\n            mu.each(transform, (handle, key) => {\n                if (typeof handle === 'function') {\n                    data = handle(data);\n                } else {\n                    let [fnn] = _.keys(handle);\n                    mu.if(this[fnn], (fn) => {\n                        data = fn(data, handle[fnn]);\n                    });\n                }\n            });\n        });\n\n        let $data = mu.clone(data);\n\n        // 过滤部分不合法数据\n        data = data.filter((o) => mu.isExist(o.name) && o.name !== '');\n\n        // 将数据按组显示\n        // 过滤数据中重复数据\n        let _data = mu.run(\n            dataModel === 'single',\n            () => {\n                return mu.map(\n                    data,\n                    (o) => {\n                        return {\n                            __key__: o[CHART_NAME],\n                            __val__: o\n                        };\n                    },\n                    {}\n                );\n            },\n            () => {\n                return mu.groupArray(data, CHART_NAME);\n            }\n        );\n\n        // 获得 legend array\n        let _legend = mu.map(\n            _data,\n            (o, name) => {\n                return { name };\n            },\n            []\n        );\n\n        // 按 _legend 的顺序重新排列数据\n        let _series = mu.map(\n            _legend,\n            (legend) => {\n                return _data[mu.ifnvl(legend.name, legend)];\n            },\n            []\n        );\n\n        // 统计并计算横向（经度）数据\n        _series = this.rowCalc(_series, dataModel);\n\n        // 统计并计算纬度信息\n        _series = this.colCalc(_series, dataModel);\n\n        let _x =\n            dataModel === 'single'\n                ? mu.run(() => {\n                      let xd = mu.map(data, (o) => {\n                          return o[CHART_X];\n                      });\n\n                      return mu.isEmpty(_.compact(xd)) ? null : xd;\n                  })\n                : mu.map(\n                      mu.groupArray(data, CHART_X),\n                      (o, name) => {\n                          return name;\n                      },\n                      []\n                  );\n\n        let _dataView = this.getDataView(_series, _legend, _x);\n\n        return {\n            $data,\n            // $transform: data,\n            _legend,\n            _series,\n            _x,\n            _dataView\n        };\n    },\n\n    getDataView(series, legend = [], x = []) {\n        let _series = mu.clone(series);\n        let _legend = mu.clone(legend);\n        let _x = mu.clone(x);\n\n        if (mu.type(_series[0], 'object')) {\n            _series = [_series];\n        }\n\n        let _dataView =\n            mu.map(_series, (arr, inx) => {\n                let legend = _legend[inx] || {};\n                let legendName = legend.name || legend;\n\n                arr.unshift(mu.isEmpty(_x) ? '' : legendName);\n                arr = mu.map(arr, (o) => mu.ifnvl(mu.ifnvl(o.value, o), '-'));\n                return arr;\n            }) || [];\n\n        if (mu.isEmpty(_x) && _dataView && _dataView[0] && _dataView[0].length) {\n            _x = mu.map(\n                _dataView[0].length - 1,\n                (i, inx) => {\n                    let x = legend[inx] || 0;\n                    x = x.name || x;\n                    return x;\n                },\n                []\n            );\n        }\n\n        _x = mu.ifnvl(_x, []);\n        _x.unshift('');\n        _dataView.unshift(_x);\n\n        return _dataView;\n    },\n\n    /**\n     * 计算当前series纵向数据统计，及所占百分比\n     * @param {any[]} series\n     * @param {string} dataModel\n     */\n    colCalc(series: any[] = [], dataModel: string = 'group') {\n        if (mu.isEmpty(series) || dataModel !== 'group') {\n            return series;\n        }\n\n        // col length\n        let colLen = series[0].length;\n\n        let sums = mu.map(\n            colLen,\n            (i, ii) => {\n                return _.reduce(\n                    series,\n                    (sum, d) => {\n                        return sum + d[ii].value;\n                    },\n                    0\n                );\n            },\n            []\n        );\n\n        return mu.map(series, (items) => {\n            return mu.map(items, (d, inx) => {\n                let sum = sums[inx];\n                d.$colSum = sum;\n                d.$colRate = mu.format(d.value / sum, ':4');\n                d.$colPercent = mu.format(d.value / sum, '::');\n                d.$colPercent2 = mu.format(d.value / sum, '::2');\n                d.$value = d.value;\n                return d;\n            });\n        });\n    },\n\n    /**\n     * 计算当前series横向数据统计，及所占百分比\n     * @param series\n     * @param dataModel\n     */\n\n    rowCalc(series: any[] = [], dataModel: string = 'group') {\n        if (dataModel === 'single') {\n            let sum: number = _.reduce(\n                series,\n                (sum, d) => {\n                    return sum + d.value;\n                },\n                0\n            );\n            return mu.map(series, (d) => {\n                d.$rowSum = sum;\n                d.$rowRate = mu.format(d.value / sum, ':4');\n                d.$rowPercent = mu.format(d.value / sum, '::');\n                d.$rowPercent2 = mu.format(d.value / sum, '::2');\n                d.$value = d.value;\n                return d;\n            });\n        } else if ((dataModel = 'group')) {\n            return mu.map(series, (item) => {\n                return this.rowCalc(item, 'single');\n            });\n        }\n    },\n\n    /**\n     * 初始调整options\n     * @param options\n     */\n    initOptions(options) {\n        let { names } = this._colors();\n\n        /**\n         * 按series name名称匹配颜色\n         */\n        mu.run(names, () => {\n            let series = options.series;\n\n            options.series = mu.map(series, (item) => {\n                let { name, type, data } = item;\n                let color = names[name];\n\n                if (mu.or(type, 'pie', 'radar') || !color) {\n                    mu.each(data, (d) => {\n                        let name = d.name;\n                        let color = names[name];\n                        if (color) {\n                            _.set(d, 'itemStyle.color', color);\n                        }\n                    });\n                } else {\n                    _.set(item, 'itemStyle.color', color);\n                }\n\n                return item;\n            });\n        });\n\n        // _.set(options, 'series[0].itemStyle.color', '#0f0');\n\n        return options;\n    },\n\n    /**\n     * 根据数据配置series\n     * 以及将data注入series\n     * @param options\n     * @param dataModel\n     * @param chartType\n     * @param rst\n     * @param setting\n     */\n    injectOptions(options, rst, chartType, dataModel, setting) {\n        /**\n         * legend\n         */\n        mu.run(rst._legend, (legend) => {\n            switch (chartType) {\n                case 'map':\n                case 'gauge':\n                case 'scatter':\n                    break;\n                default:\n                    options = _.set(options, 'legend.data', rst._legend);\n                    break;\n            }\n        });\n\n        /**\n         * x 轴配置\n         */\n        mu.run(rst._x, (x) => {\n            switch (chartType) {\n                case 'radar':\n                    let _maxmin = this.maxmin(rst.$data, CHART_X);\n\n                    options = _.set(\n                        options,\n                        'radar.indicator',\n                        mu.map(x, (name) => {\n                            let max_ = parseFloat(_.get(_maxmin[name], 'max.value'));\n                            let min_ = parseFloat(_.get(_maxmin[name], 'min.value'));\n\n                            if (max_ < min_) {\n                                let tmp = [max_, min_];\n                                max_ = tmp[1];\n                                min_ = tmp[0];\n                            }\n\n                            let min = Math.ceil(min_ * (min_ > 0 ? 0.95 : 1.05));\n                            let max = Math.ceil(max_ * (max_ > 0 ? 1.05 : 0.95));\n\n                            return {\n                                name,\n                                max,\n                                min\n                            };\n                        })\n                    );\n                    break;\n                case 'map':\n                    break;\n                case 'gauge':\n                case 'scatter':\n                    break;\n                default:\n                    options = _.set(options, 'xAxis[0].data', x);\n                    break;\n            }\n        });\n\n        /**\n         * series 设置\n         * @type {*[]}\n         */\n\n        mu.run(\n            dataModel === 'single',\n            () => {\n                options.series = [\n                    {\n                        type: chartType,\n                        data: rst._series\n                    }\n                ];\n\n                switch (chartType) {\n                    case 'map':\n                        /**\n                         * 虚拟\n                         * @type {*}\n                         */\n                        let max: any = _.maxBy(rst._series, (o: any) => o.value) || {};\n                        options = _.set(options, 'visualMap.max', max.value);\n                        break;\n                }\n            },\n\n            () => {\n                let data;\n\n                switch (chartType) {\n                    case 'map':\n                        /**\n                         * 虚拟\n                         * @type {*}\n                         */\n                        let max: any = _.maxBy(rst._series, (o: any) => o.value) || {};\n                        options = _.set(options, 'visualMap.max', max.value);\n\n                        let dataMap = mu.map(\n                            rst._series,\n                            (o, name) => {\n                                return {\n                                    name: _.get(o, '[0].name'),\n                                    value: (mu.map(o, (oo) => oo.value, []) || [])[0]\n                                };\n                            },\n                            []\n                        );\n\n                        options.series = [\n                            {\n                                type: chartType,\n                                name: _.get(dataMap, '[0].name'),\n                                data: dataMap,\n                                label: {\n                                    normal: {\n                                        show: true\n                                    },\n                                    emphasis: {\n                                        show: true\n                                    }\n                                }\n                            }\n                        ];\n\n                        break;\n                    case 'radar':\n                        data = mu.map(\n                            rst._series,\n                            (o, name) => {\n                                return {\n                                    name: _.get(o, '[0].name'),\n                                    value: mu.map(o, (oo) => oo.value, [])\n                                };\n                            },\n                            []\n                        );\n\n                        options.series = [\n                            {\n                                type: chartType,\n                                name: _.get(data, '[0].name'),\n                                data\n                            }\n                        ];\n\n                        break;\n\n                    case 'scatter':\n                        data = mu.map(\n                            rst._series,\n                            (o, name) => {\n                                return {\n                                    name: _.get(o, '[0].name'),\n                                    value: [o[0].x, o[0].value]\n                                };\n                            },\n                            []\n                        );\n\n                        options.series = [\n                            {\n                                type: chartType,\n                                name: _.get(data, '[0].name'),\n                                data\n                            }\n                        ];\n\n                        break;\n\n                    default:\n                        options.series = mu.map(rst._series, (o) => {\n                            return {\n                                type: chartType,\n                                name: _.get(o, '[0].name'),\n                                data: o\n                            };\n                        });\n\n                        break;\n                }\n            }\n        );\n\n        return options;\n    },\n\n    /**\n     * 获取完整的 setting 配置\n     * @param chartTypes\n     * @param setting\n     * @return {*}\n     */\n    getSetting(chartTypes, setting) {\n        chartTypes = defSubType[chartTypes] || chartTypes;\n\n        let [_chartType, ..._subType] = chartTypes.split('::');\n        let paramSetting = [];\n        if (mu.type(setting, 'array')) {\n            /**\n             * setting=['::ring', '::rose({ borderWidth: 6 })'] 支持配置数组带参数\n             */\n            mu.each(setting, (rule) => {\n                if (typeof rule === 'string' && rule.indexOf('::') !== -1) {\n                    let [tempChartType, ...tempSubType] = rule.split('::');\n                    _subType = _subType.concat(tempSubType);\n                } else {\n                    paramSetting.push(rule);\n                }\n            });\n        } else {\n            paramSetting = setting;\n        }\n\n        /**\n         * setting 配置的权重值\n         * subSetting[chartType] < subSetting[sub] < subSetting[subGroup] < subSetting[subType] < setting(paramSetting)\n         * subType = chartType::sub...\n         */\n\n        let _subSetting: any = subSetting(this._colors());\n        _subSetting = { ..._subSetting, ...MrServices.getEchartsSubTypes() };\n\n        let _setting = mu.extend({}, this.flatDataSetting(_subSetting[_chartType]));\n\n        mu.run(_subType, () => {\n            mu.each(_subType, (sub) => {\n                let type = this.getSetType(sub);\n                _setting = mu.extend(_setting, this.flatDataSetting(_subSetting[`::${type.sub}`], type.param));\n            });\n            mu.each(_subType, (sub) => {\n                let type = this.getSetType(sub);\n                _setting = mu.extend(_setting, this.flatDataSetting(_subSetting[`${_chartType}::${type.sub}`], type.param));\n            });\n            /**\n             * pie::ring::rose 整体调用模式\n             */\n            let type = this.getSetType(_subType[_subType.length - 1]);\n            _subType[_subType.length - 1] = type.sub;\n            _setting = mu.extend(_setting, this.flatDataSetting(_subSetting[`${_chartType}::${_subType.join('::')}`], type.param));\n        });\n        _setting = mu.extend(_setting, this.flatDataSetting(paramSetting));\n\n        return _setting;\n    },\n\n    /**\n     *\n     * @param sub  string 判断并处理sub字符串函数及所带参数\n     * 例子：将\"::rose({borderWidth:4})\" =>{sub: rose, param:{borderWidth:4}}\n     * 例子：将\"::rose\" =>{sub: rose}\n     */\n    getSetType(sub: string) {\n        let type = sub.split('(');\n        let param = [];\n        if (type[1]) {\n            param = type[1].split(')');\n        }\n        let subType: any = { sub: type[0] };\n        param[0] !== '' && (subType.param = eval('(' + param[0] + ')'));\n        return subType;\n    },\n\n    /**\n     * 处理返回数组化的setting数据\n     * @param setting\n     */\n    flatDataSetting(setting: any, param: any) {\n        if (setting) {\n            let set = _.isFunction(setting) ? setting(param && param) : setting;\n            if (mu.type(set, 'array')) {\n                let _set = {};\n                mu.each(set, (o) => {\n                    _set = mu.extend(_set, o);\n                });\n                return _set;\n            } else {\n                return set;\n            }\n        } else {\n            return {};\n        }\n    },\n\n    /**\n     * 根据配置项，重新设置options\n     * @param options\n     * @param setting\n     * @param charType\n     */\n    reOptions(options, setting, charType) {\n        mu.each(setting, (val, key) => {\n            this.muSet(options, key, val);\n        });\n\n        // switch(charType) {\n        //     case 'scatter':\n        //\n        //         mu.remove(options.xAxis[0], 'data');\n        //\n        //         break;\n        // }\n\n        // 根据 legend.show 调节 grid 关联高度\n        mu.run(() => {\n            let _show = mu.ifnvl(_.get(options, 'legend.show'), true);\n            if (!_show) {\n                // todo 暂时不考虑其他方向\n                _.set(options, 'grid.top', 10);\n            } else {\n                // todo 计算legend的高度\n            }\n        });\n\n        return options;\n    },\n\n    /**\n     * 获取 echarts options\n     * @param data 数据来源\n     * @param dataType 数据类型\n     * @param dataModel 数据转换模型\n     * @param chartTypes\n     * @param setting\n     * @param transform\n     * @return {*}\n     */\n    getOptions(data = [], dataType = 'dataSource', dataModel, chartTypes = 'line', setting = {}, transform) {\n        console.debug('~~~~', chartTypes);\n\n        let [_chartType] = chartTypes.split('::');\n\n        // 获得默认的数据转换模型\n        let _dataModel = dataModel || defDataModel[_chartType] || 'group';\n\n        // setting 配置最终以手动（component prop setting)为准\n        let _setting = this.getSetting(chartTypes, setting);\n\n        // 获得默认的 options 配置\n        let _opts = mu.clone(defOptions[_chartType]);\n\n        // 数据转换结果\n        let _rst = this.transform(data, transform, dataType, _dataModel);\n\n        // 根据数据设置series, 得到初始options\n        _opts = this.injectOptions(_opts, _rst, _chartType, _dataModel, _setting);\n\n        // 初步调整options\n        _opts = this.initOptions(_opts);\n\n        // 根据某些规则，重新配置options\n        _opts = this.reOptions(_opts, _setting, _chartType, _dataModel);\n\n        return {\n            options: _opts,\n            data: _rst\n        };\n    }\n};\ntry {\n    // @ts-ignore\n    mrechartsservices.displayName = \"mrechartsservices\";\n    // @ts-ignore\n    mrechartsservices.__docgenInfo = { \"description\": \"MrEcharts Services\", \"displayName\": \"mrechartsservices\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/mr-echarts/mr-echarts.services.ts#mrechartsservices\"] = { docgenInfo: mrechartsservices.__docgenInfo, name: \"mrechartsservices\", path: \"src/lib/mr-echarts/mr-echarts.services.ts#mrechartsservices\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","/**\n * @creator mizi.lin\n *\n * @update mizi.lin@0.1.25.20180523\n * ::=> 添加 setting.bar::singleColors\n *\n * @update mizi.lin@0.1.26.20180529\n * ::=> 添加 randomAll\n * ::=> wordCloud 添加 width 和 height\n *\n * @update mizi.lin@v0.2.0-b8.2o18o614\n * :: => 添加 ::radarCoaxial 雷达各坐标轴同轴（相同的min, max）\n *\n * @update mizi.lin@v0.2.0-b.2o18o614\n * :: => 添加极坐标 ::bar:polar 的支持\n *\n * @update mizi.lin@0.2.1-b6.20180723\n * :: => 添加percent100（按比例100%显示）显示\n */\n\nimport * as _ from 'lodash';\nimport  mu from 'mzmu';\n\nconst citys = {\n    海门: [121.15, 31.89],\n    鄂尔多斯: [109.781327, 39.608266],\n    招远: [120.38, 37.35],\n    舟山: [122.207216, 29.985295],\n    齐齐哈尔: [123.97, 47.33],\n    盐城: [120.13, 33.38],\n    赤峰: [118.87, 42.28],\n    青岛: [120.33, 36.07],\n    乳山: [121.52, 36.89],\n    金昌: [102.188043, 38.520089],\n    泉州: [118.58, 24.93],\n    莱西: [120.53, 36.86],\n    日照: [119.46, 35.42],\n    胶南: [119.97, 35.88],\n    南通: [121.05, 32.08],\n    拉萨: [91.11, 29.97],\n    云浮: [112.02, 22.93],\n    梅州: [116.1, 24.55],\n    文登: [122.05, 37.2],\n    上海: [121.48, 31.22],\n    攀枝花: [101.718637, 26.582347],\n    威海: [122.1, 37.5],\n    承德: [117.93, 40.97],\n    厦门: [118.1, 24.46],\n    汕尾: [115.375279, 22.786211],\n    潮州: [116.63, 23.68],\n    丹东: [124.37, 40.13],\n    太仓: [121.1, 31.45],\n    曲靖: [103.79, 25.51],\n    烟台: [121.39, 37.52],\n    福州: [119.3, 26.08],\n    瓦房店: [121.979603, 39.627114],\n    即墨: [120.45, 36.38],\n    抚顺: [123.97, 41.97],\n    玉溪: [102.52, 24.35],\n    张家口: [114.87, 40.82],\n    阳泉: [113.57, 37.85],\n    莱州: [119.942327, 37.177017],\n    湖州: [120.1, 30.86],\n    汕头: [116.69, 23.39],\n    昆山: [120.95, 31.39],\n    宁波: [121.56, 29.86],\n    湛江: [110.359377, 21.270708],\n    揭阳: [116.35, 23.55],\n    荣成: [122.41, 37.16],\n    连云港: [119.16, 34.59],\n    葫芦岛: [120.836932, 40.711052],\n    常熟: [120.74, 31.64],\n    东莞: [113.75, 23.04],\n    河源: [114.68, 23.73],\n    淮安: [119.15, 33.5],\n    泰州: [119.9, 32.49],\n    南宁: [108.33, 22.84],\n    营口: [122.18, 40.65],\n    惠州: [114.4, 23.09],\n    江阴: [120.26, 31.91],\n    蓬莱: [120.75, 37.8],\n    韶关: [113.62, 24.84],\n    嘉峪关: [98.289152, 39.77313],\n    广州: [113.23, 23.16],\n    延安: [109.47, 36.6],\n    太原: [112.53, 37.87],\n    清远: [113.01, 23.7],\n    中山: [113.38, 22.52],\n    昆明: [102.73, 25.04],\n    寿光: [118.73, 36.86],\n    盘锦: [122.070714, 41.119997],\n    长治: [113.08, 36.18],\n    深圳: [114.07, 22.62],\n    珠海: [113.52, 22.3],\n    宿迁: [118.3, 33.96],\n    咸阳: [108.72, 34.36],\n    铜川: [109.11, 35.09],\n    平度: [119.97, 36.77],\n    佛山: [113.11, 23.05],\n    海口: [110.35, 20.02],\n    江门: [113.06, 22.61],\n    章丘: [117.53, 36.72],\n    肇庆: [112.44, 23.05],\n    大连: [121.62, 38.92],\n    临汾: [111.5, 36.08],\n    吴江: [120.63, 31.16],\n    石嘴山: [106.39, 39.04],\n    沈阳: [123.38, 41.8],\n    苏州: [120.62, 31.32],\n    茂名: [110.88, 21.68],\n    嘉兴: [120.76, 30.77],\n    长春: [125.35, 43.88],\n    胶州: [120.03336, 36.264622],\n    银川: [106.27, 38.47],\n    张家港: [120.555821, 31.875428],\n    三门峡: [111.19, 34.76],\n    锦州: [121.15, 41.13],\n    南昌: [115.89, 28.68],\n    柳州: [109.4, 24.33],\n    三亚: [109.511909, 18.252847],\n    自贡: [104.778442, 29.33903],\n    吉林: [126.57, 43.87],\n    阳江: [111.95, 21.85],\n    泸州: [105.39, 28.91],\n    西宁: [101.74, 36.56],\n    宜宾: [104.56, 29.77],\n    呼和浩特: [111.65, 40.82],\n    成都: [104.06, 30.67],\n    大同: [113.3, 40.12],\n    镇江: [119.44, 32.2],\n    桂林: [110.28, 25.29],\n    张家界: [110.479191, 29.117096],\n    宜兴: [119.82, 31.36],\n    北海: [109.12, 21.49],\n    西安: [108.95, 34.27],\n    金坛: [119.56, 31.74],\n    东营: [118.49, 37.46],\n    牡丹江: [129.58, 44.6],\n    遵义: [106.9, 27.7],\n    绍兴: [120.58, 30.01],\n    扬州: [119.42, 32.39],\n    常州: [119.95, 31.79],\n    潍坊: [119.1, 36.62],\n    重庆: [106.54, 29.59],\n    台州: [121.420757, 28.656386],\n    南京: [118.78, 32.04],\n    滨州: [118.03, 37.36],\n    贵阳: [106.71, 26.57],\n    无锡: [120.29, 31.59],\n    本溪: [123.73, 41.3],\n    克拉玛依: [84.77, 45.59],\n    渭南: [109.5, 34.52],\n    马鞍山: [118.48, 31.56],\n    宝鸡: [107.15, 34.38],\n    焦作: [113.21, 35.24],\n    句容: [119.16, 31.95],\n    北京: [116.46, 39.92],\n    徐州: [117.2, 34.26],\n    衡水: [115.72, 37.72],\n    包头: [110, 40.58],\n    绵阳: [104.73, 31.48],\n    乌鲁木齐: [87.68, 43.77],\n    枣庄: [117.57, 34.86],\n    杭州: [120.19, 30.26],\n    淄博: [118.05, 36.78],\n    鞍山: [122.85, 41.12],\n    溧阳: [119.48, 31.43],\n    库尔勒: [86.06, 41.68],\n    安阳: [114.35, 36.1],\n    开封: [114.35, 34.79],\n    济南: [117, 36.65],\n    德阳: [104.37, 31.13],\n    温州: [120.65, 28.01],\n    九江: [115.97, 29.71],\n    邯郸: [114.47, 36.6],\n    临安: [119.72, 30.23],\n    兰州: [103.73, 36.03],\n    沧州: [116.83, 38.33],\n    临沂: [118.35, 35.05],\n    南充: [106.110698, 30.837793],\n    天津: [117.2, 39.13],\n    富阳: [119.95, 30.07],\n    泰安: [117.13, 36.18],\n    诸暨: [120.23, 29.71],\n    郑州: [113.65, 34.76],\n    哈尔滨: [126.63, 45.75],\n    聊城: [115.97, 36.45],\n    芜湖: [118.38, 31.33],\n    唐山: [118.02, 39.63],\n    平顶山: [113.29, 33.75],\n    邢台: [114.48, 37.05],\n    德州: [116.29, 37.45],\n    济宁: [116.59, 35.38],\n    荆州: [112.239741, 30.335165],\n    宜昌: [111.3, 30.7],\n    义乌: [120.06, 29.32],\n    丽水: [119.92, 28.45],\n    洛阳: [112.44, 34.7],\n    秦皇岛: [119.57, 39.95],\n    株洲: [113.16, 27.83],\n    石家庄: [114.48, 38.03],\n    莱芜: [117.67, 36.19],\n    常德: [111.69, 29.05],\n    保定: [115.48, 38.85],\n    湘潭: [112.91, 27.87],\n    金华: [119.64, 29.12],\n    岳阳: [113.09, 29.37],\n    长沙: [113, 28.21],\n    衢州: [118.88, 28.97],\n    廊坊: [116.7, 39.53],\n    菏泽: [115.480656, 35.23375],\n    合肥: [117.27, 31.86],\n    武汉: [114.31, 30.52],\n    大庆: [125.03, 46.58]\n};\n\n/**\n * 各种chart基础option配置\n */\nexport const defOptions = {\n    pie: {\n        legend: {},\n        tooltip: {\n            trigger: 'item'\n        },\n        dataset: {},\n        series: []\n    },\n\n    bar: {\n        grid: {\n            left: 'left',\n            right: 20,\n            bottom: 20,\n            width: '98%',\n            containLabel: true\n        },\n        legend: {},\n        tooltip: {\n            trigger: 'axis'\n        },\n        yAxis: [{}],\n        dataset: {},\n        series: [],\n        xAxis: [\n            {\n                type: 'category',\n                boundaryGap: true\n            }\n        ]\n    },\n\n    // polar: {\n    //     grid: {\n    //         left: 'left',\n    //         right: 20,\n    //         bottom: 20,\n    //         width: '98%',\n    //         containLabel: true\n    //     },\n    //     legend: {},\n    //     tooltip: {\n    //         trigger: 'axis'\n    //     },\n    //     yAxis: [{}],\n    //     dataset: {},\n    //     xAxis: [{type: 'category'}]\n    // },\n\n    line: {\n        grid: {\n            left: 'left',\n            right: 20,\n            bottom: 20,\n            width: '95%',\n            containLabel: true\n        },\n        legend: {},\n        tooltip: {\n            trigger: 'axis'\n        },\n        dataset: {},\n        series: [],\n        xAxis: [\n            {\n                type: 'category',\n                boundaryGap: false\n            }\n        ],\n        yAxis: [{ type: 'value' }]\n    },\n\n    scatter: {\n        grid: {\n            bottom: 20,\n            left: 'left'\n        },\n        tooltip: {},\n        dataset: {},\n        series: [],\n        yAxis: [{ type: 'value' }],\n        xAxis: [{ type: 'value' }]\n    },\n\n    treemap: {\n        legend: {},\n        tooltip: {},\n        dataset: {},\n        series: []\n    },\n\n    radar: {\n        legend: {},\n        tooltip: {},\n        dataset: {},\n        series: [],\n        radar: { indicator: [] }\n    },\n\n    wordCloud: {\n        legend: {},\n        tooltip: {},\n        dataset: {},\n        series: []\n    },\n\n    gauge: {\n        legend: {},\n        dataset: {},\n        series: [],\n        tooltip: {\n            formatter: '{a} <br/>{b} = {c}%'\n        }\n    },\n\n    map: {\n        tooltip: {},\n        visualMap: {\n            min: 0,\n            max: 200,\n            left: 'left',\n            top: 'bottom',\n            text: ['高', '低'],\n            calculable: false\n        },\n        geo: {\n            zoom: 1.2,\n            roam: false,\n            itemStyle: {\n                normal: {\n                    areaColor: '#fbfbfb',\n                    borderColor: '#b9b4b7'\n                }\n            }\n        },\n        series: []\n    }\n};\n\n/**\n * 各类型的chart, 默认数据处理机制\n * @type {{pie: string; wordCloud: string}}\n */\nexport const defDataModel = {\n    pie: 'single',\n    wordCloud: 'single',\n    map: 'single'\n    // scatter: 'single'\n};\n\n/**\n * 默认各类型的chart\n * @type {{bar: string; gauge: string; treemap: string}}\n */\nexport const defSubType = {\n    bar: 'bar::stack',\n    gauge: 'gauge::half',\n    treemap: 'treemap::simple'\n};\n\n/**\n * 各种配置规则\n * @param _colors\n */\n\nexport function subSetting(_colors) {\n    let { base: _baseColors = [], names: _nameColors = {} } = _colors;\n\n    return {\n        /**\n         * 不显示xy轴\n         * 默认显示x轴名称\n         *\n         * @map bar, line, scatter, radar\n         */\n        '::noAxis': () => ({\n            'legend.show': false,\n            'yAxis[0].axisLine.show': false,\n            'yAxis[0].axisTick.show': false,\n            'yAxis[0].axisLabel.show': false,\n            'yAxis[0].splitArea.show': false,\n            'yAxis[0].splitLine.show': false,\n            'xAxis[0].axisLine.show': false,\n            'xAxis[0].axisTick.show': false,\n            'xAxis[0].splitArea.show': false,\n            'xAxis[0].splitLine.show': false\n        }),\n\n        // 是否堆叠显示\n        // @map bar, line\n        '::stack': ({isStack = true} = {}) => {\n            return {\n                '$$series[*].stack': isStack ? 'one' : void 0\n            }\n        },\n\n        /**\n         * 平铺呈现\n         * @map bar, line\n         */\n        '::paved': () => ({\n            '$$series[*].stack': null\n        }),\n\n        /**\n         * xy轴转换显示\n         *\n         * @map bar, line, scatter, radar\n         */\n        '::xyExchange': () => ({\n            'xAxis[0].type': 'value',\n            'yAxis[0].type': 'category'\n        }),\n\n        /**\n         * 设置柱形图背景阴影\n         * @map bar\n         */\n        '::bg': () => ({\n            'series[1].type': 'bar',\n            'series[1].zlevel': -2,\n            'series[1].barGap': '-100%',\n            'series[1].animation': false,\n            'series[1].barCategoryGap': '40%',\n            'series[1].itemStyle.normal.color': 'rgba(0, 0, 0, .05)',\n            '**series[1].data': (obj: any) => {\n                let _data = _.get(obj, 'series[0].data');\n                let _max = _.maxBy(_data, (o: any) => o.value);\n                return mu.map(_.get(obj, 'series[0].data'), (o: any) => {\n                    o.value = _max.value * 1.1;\n                    return o;\n                });\n            }\n        }),\n\n        /**\n         * 设置图表area显示方式\n         *\n         * @map line\n         */\n        '::area': () => ({\n            '$$series[*].areaStyle.opacity': 0.1,\n            '$$series[*].smooth': true,\n            '$$series[*].smoothMonotone': true\n        }),\n\n        /**\n         * tooltip 显示百分比数值\n         *\n         * @map line, bar, pie ...\n         */\n        '::tooltipFormatterPercent': () => ({\n            'tooltip.formatter': (obj) => {\n                return `${obj.marker} ${obj.data.name}: ${mu.format(obj.data.value, '::1')}`;\n            }\n        }),\n\n        /**\n         * tooltip 显示百分比数值2\n         *\n         * @map line, bar, pie ...\n         */\n        '::tooltipFormatterPercent2': () => ({\n            'tooltip.formatter': (obj) => {\n                let x = obj.data.x ? obj.data.x + '<br />' : '';\n                return `${x}${obj.marker} ${obj.data.name}: ${obj.data.value}%`;\n            }\n        }),\n\n        /**\n         * y轴 显示百分比数值\n         * @map line, bar, pie ...\n         */\n        '::yAxisPercent': () => ({\n            '$$yAxis[*].axisLabel.formatter': '{value}%'\n        }),\n\n        /**\n         * x轴 显示百分比数值\n         * @map line, bar, pie ...\n         */\n        '::xAxisPercent': () => ({\n            '$$xAxis[*].axisLabel.formatter': '{value}%'\n        }),\n\n        line: () => ({\n            '$$series[*].smooth': true\n        }),\n\n        'bar::pn': () => ({\n            'xAxis[0].max': 100,\n            'xAxis[0].min': -100,\n            'series[0].label.formatter': (rst) => {\n                return `${rst.data._value || rst.data.value}%`;\n            },\n            'tooltip.formatter': (rst) => {\n                return `${rst.data.name}: ${rst.data._value || rst.data.value}%`;\n            },\n            '**$$series[0].data[*]': (obj, data) => {\n                data._value = data.value;\n                data.value = -data.value;\n                return data;\n            }\n        }),\n\n        '::percent100': () => ({\n            '$$series[*].stack': 'one',\n\n            '**$$series[*].data': (obj, series) => {\n                let data = series.data;\n                return mu.map(data, (item) => {\n                    item.value = item.$colRate;\n                    return item;\n                });\n            },\n\n            '$$yAxis[*].max': 1,\n\n            '$$yAxis[*].axisLabel.formatter': (value) => {\n                return mu.format(value, '::');\n            },\n\n            'tooltip.formatter': (obj, item) => {\n                obj = obj || [];\n                let formatter = [];\n                formatter = mu.map(obj, (item) => {\n                    return `${item.marker} ${item.data.name}: ${item.data.$colPercent2} (${item.data.$value})`;\n                });\n\n                formatter.unshift(_.get(obj[0], 'data.x'));\n\n                return formatter.join('<br />');\n            }\n        }),\n\n        /**\n         * 在显示singleBar的时候（无legend时)\n         * 可以按顺序显示柱子颜色\n         */\n        'bar::singleColors': () => ({\n            '**$$series[0].data[*]': (obj, data, inx) => {\n                _.set(data, 'itemStyle.color', _baseColors[inx]);\n                return data;\n            }\n        }),\n\n        'bar::polar': () => [\n            { 'legend.show': false },\n            { '$$series[*].coordinateSystem': 'polar' },\n            {\n                '**polar': (options) => {\n                    let { xAxis, yAxis } = options;\n                    delete options['xAxis'];\n                    delete options['yAxis'];\n                    _.set(xAxis, '[0].axisLabel.interval', 0);\n                    options.angleAxis = xAxis;\n                    options.radiusAxis = {\n                        axisLine: {\n                            show: true,\n                            lineStyle: {\n                                color: '#dedede',\n                                width: 1,\n                                type: 'solid'\n                            }\n                        }\n                    };\n                    return {};\n                }\n            }\n        ],\n\n        // 柱形阶梯瀑布图\n        // 默认拾级上升\n        '::ladder': () => ({\n            '**series': (obj) => {\n                let _series = obj.series;\n                let _data0 = mu.clone(_series[0]);\n                let _d = _data0.data;\n                _data0.name = 'ladder dark start';\n                _.set(_data0, 'itemStyle.barBorderColor', 'rgba(0, 0, 0, 0)');\n                _.set(_data0, 'itemStyle.color', 'rgba(0, 0, 0, 0)');\n                _.set(_data0, 'itemStyle.emphasis.barBorderColor', 'rgba(0, 0, 0, 0)');\n                _.set(_data0, 'itemStyle.emphasis.color', 'rgba(0, 0, 0, 0)');\n                _.set(_data0, 'tooltip.show', false);\n                _d = mu.map(_d, (o) => o.value);\n                _d.unshift(0);\n                _d.pop();\n                mu.each(_d, (o, inx) => {\n                    _d[inx] = o + (_d[inx - 1] || 0);\n                });\n                _data0.data = _d;\n                _series.unshift(_data0);\n                return obj.series;\n            }\n        }),\n\n        pie: () => ({\n            '$$series[*].center': ['50%', '55%']\n        }),\n\n        // 饼图 => 环形\n        'pie::ring': () => [\n            {\n                '$$series[*].radius': ['50%', '75%']\n            }\n        ],\n\n        '::ringLabel': () => ({\n            '$$series[*].avoidLabelOverlap': false,\n            '$$series[*].selectedMode': 'single',\n            '$$series[*].label': {\n                normal: {\n                    show: false,\n                    position: 'center'\n                },\n                emphasis: {\n                    show: true,\n                    lineHeight: 56,\n                    fontSize: 14,\n                    formatter: (o) => {\n                        return `${o.name}\\n${mu.format(o.value)}\\n${o.data['$rowPercent2']}`;\n                    }\n                }\n            }\n        }),\n\n        // 隐藏label\n        '::hideLabel': () => ({\n            '$$series[*].label.normal.show': false\n        }),\n\n        'pie::rose': () => [\n            { '$$series[*].roseType': 'area' },\n            {\n                '$$series[*].radius': ['10%', '75%']\n            },\n            { '$$series[*].label.normal.show': true }\n        ],\n\n        'pie::ring::rose': () => [\n            { 'series[0].roseType': 'area' },\n            {\n                'series[0].radius': ['10%', '65%']\n            },\n            { 'series[0].label.normal.show': false },\n            // 'series[0].itemStyle.color': _colors[0],\n            { 'series[1].tooltip.show': false },\n            { 'series[1].type': 'pie' },\n            { 'series[1].hoverAnimation': false },\n            { 'series[1].zlevel': -2 },\n            {\n                'series[1].radius': ['66%', '75%']\n            },\n            {\n                'series[1].center': ['50%', '55%']\n            },\n            // 'series[1].itemStyle.color': '#CFD7D9'},\n            { 'series[1].itemStyle.borderWidth': 2 },\n            { 'series[1].itemStyle.borderColor': '#fff' },\n            {\n                '**series[1].data': (obj) => {\n                    return mu.map(_.get(obj, 'series[0].data'), (o) => {\n                        o.value = 1;\n                        return o;\n                    });\n                }\n            },\n            { 'series[1].label.normal.show': true }\n            // 'series[1].label.normal.position': 'inside'\n        ],\n\n        map: () => ({\n            'visualMap.inRange.color': ['#ffffff', _.get(_colors, 'base[0]')],\n            'geo.itemStyle.emphasis.areaColor': _.get(_colors, 'base[1]')\n        }),\n\n        // 地图 => 中国地图\n        'map::china': () => ({\n            'geo.map': 'china',\n            'series[0].mapType': 'china',\n            'series[0].geoIndex': 0,\n            'series[0].name': '地域'\n        }),\n\n        // 地图 => 地区\n        'map::china::citys': () => {},\n\n        // 仪表盘: 半圆\n        'gauge::half': () => ({\n            'grid.top': 0,\n            'grid.left': 0,\n            'grid.bottom': 0,\n            'grid.right': 0,\n            'series[0].axisTick.show': false,\n            'series[0].axisLabel.show': false,\n            'series[0].splitLine.show': false,\n            'series[0].startAngle': 180,\n            'series[0].endAngle': 0,\n            'series[0].pointer.length': '60%',\n            'series[0].pointer.width': 6,\n            'series[0].detail': {\n                formatter: '{value}%'\n            }\n        }),\n\n        'scatter::pop': () => ({\n            '$$series[*].symbol': 'circle',\n            '$$series[*].symbolSize': 18,\n            '$$series[*].label.show': false,\n            '$$series[*].label.emphasis.show': true,\n            '$$series[*].label.position': 'top',\n            '$$series[*].label.formatter': (p) => p.name,\n            '$$series[*].itemStyle': {\n                color: '#BFC8CF',\n                opacity: 0.6\n            }\n        }),\n\n        'treemap::simple': () => ({\n            '$$series[*].left': 0,\n            '$$series[*].right': 0,\n            '$$series[*].top': 0,\n            '$$series[*].bottom': 0,\n            '$$series[*].width': '100%',\n            '$$series[*].height': '100%',\n            '$$series[*].roam': false,\n            '$$series[*].nodeClick': false,\n            '$$series[*].breadcrumb.show': false,\n            '$$series[*].itemStyle.borderWidth': 3,\n            '$$series[*].itemStyle.borderColor': '#fff',\n            '$$series[*].itemStyle.borderColorSaturation': 1\n        }),\n\n        radar: () => ({\n            '$$series[*].name': ''\n        }),\n\n        'radar::area': () => ({\n            'radar.splitArea.show': false,\n            'radar.splitLine.lineStyle.color': 'rgba(155, 155, 155, .2)',\n            'radar.axisLine.lineStyle.color': 'rgba(155, 155, 155, .2)',\n            'radar.name.color': 'rgba(155, 155, 155, .8)',\n            '$$series[*].areaStyle.normal.opacity': 0.3,\n            '$$series[*].lineStyle.normal.opacity': 0.3,\n            '$$series[*].symbol': 'none'\n        }),\n\n        // @deprecated\n        '::radarZero': () => ({\n            '$$radar.indicator[*].min': 0\n        }),\n\n        '::radarMinZero': () => ({\n            '$$radar.indicator[*].min': 0\n        }),\n\n        // @deprecated\n        '::radarMaximum': () => ({\n            '**$$radar.indicator[*].max': (options, data) => {\n                let indicator = _.get(options, 'radar.indicator');\n                indicator = mu.clone(indicator);\n                let maxItem = _.maxBy(indicator, (o: any) => o.max);\n                let max = maxItem.max * 1.05;\n                return max ? max : 5;\n            }\n        }),\n\n        '::radarMaxSome': () => ({\n            '**$$radar.indicator[*].max': (options, data) => {\n                let indicator = _.get(options, 'radar.indicator');\n                indicator = mu.clone(indicator);\n                let maxItem = _.maxBy(indicator, (o: any) => o.max);\n\n                console.debug(maxItem);\n\n                let max = maxItem.max * 1.05;\n                return max ? max : 5;\n            }\n        }),\n\n        /**\n         * 雷达同轴\n         * 默认不同轴\n         */\n        // '::radarCoaxial': '::radarMinZero::radarMaxSome',\n\n        '::radarCoaxial': () => ({\n            '**$$radar.indicator[*].max': (options, data) => {\n                let indicator = _.get(options, 'radar.indicator');\n                indicator = mu.clone(indicator);\n                let maxItem = _.maxBy(indicator, (o: any) => o.max);\n                let max = maxItem.max * 1.05;\n                return max ? max : 5;\n            },\n\n            '$$radar.indicator[*].min': 0\n        }),\n\n        wordCloud: () => ({\n            '$$series[*].shape': 'circle',\n            '$$series[*].width': '95%',\n            '$$series[*].height': '90%',\n            '$$series[*].sizeRange': [14, 42],\n            '$$series[*].rotationRange': [-45, 90]\n        }),\n\n        'wordCloud::random': () => ({\n            '$$series[*].textStyle.normal.color': () => {\n                return _.get(_colors, `base[${mu.randomInt(0, 4)}]`);\n            }\n        }),\n\n        'wordCloud::randomAll': () => ({\n            '$$series[*].textStyle.normal.color': () => {\n                let len = _baseColors.length;\n                return _baseColors[mu.randomInt(0, len - 1)];\n            }\n        })\n    };\n}\ntry {\n    // @ts-ignore\n    subSetting.displayName = \"subSetting\";\n    // @ts-ignore\n    subSetting.__docgenInfo = { \"description\": \"\\u5404\\u79CD\\u914D\\u7F6E\\u89C4\\u5219\\n@param _colors\", \"displayName\": \"subSetting\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/mr-echarts/mr-echarts.setting.ts#subSetting\"] = { docgenInfo: subSetting.__docgenInfo, name: \"subSetting\", path: \"src/lib/mr-echarts/mr-echarts.setting.ts#subSetting\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    defOptions.displayName = \"defOptions\";\n    // @ts-ignore\n    defOptions.__docgenInfo = { \"description\": \"\\u5404\\u79CDchart\\u57FA\\u7840option\\u914D\\u7F6E\", \"displayName\": \"defOptions\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/mr-echarts/mr-echarts.setting.ts#defOptions\"] = { docgenInfo: defOptions.__docgenInfo, name: \"defOptions\", path: \"src/lib/mr-echarts/mr-echarts.setting.ts#defOptions\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    defDataModel.displayName = \"defDataModel\";\n    // @ts-ignore\n    defDataModel.__docgenInfo = { \"description\": \"\\u5404\\u7C7B\\u578B\\u7684chart, \\u9ED8\\u8BA4\\u6570\\u636E\\u5904\\u7406\\u673A\\u5236\\n@type {{pie: string; wordCloud: string}}\", \"displayName\": \"defDataModel\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/mr-echarts/mr-echarts.setting.ts#defDataModel\"] = { docgenInfo: defDataModel.__docgenInfo, name: \"defDataModel\", path: \"src/lib/mr-echarts/mr-echarts.setting.ts#defDataModel\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    defSubType.displayName = \"defSubType\";\n    // @ts-ignore\n    defSubType.__docgenInfo = { \"description\": \"\\u9ED8\\u8BA4\\u5404\\u7C7B\\u578B\\u7684chart\\n@type {{bar: string; gauge: string; treemap: string}}\", \"displayName\": \"defSubType\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/mr-echarts/mr-echarts.setting.ts#defSubType\"] = { docgenInfo: defSubType.__docgenInfo, name: \"defSubType\", path: \"src/lib/mr-echarts/mr-echarts.setting.ts#defSubType\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}